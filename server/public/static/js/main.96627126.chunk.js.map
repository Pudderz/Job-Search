{"version":3,"sources":["serviceWorker.js","Components/searchBarContext.js","Components/Options/searchBar.js","Components/jobLink.js","Components/siteLink.js","Components/mainPage/jobBlock.js","Components/Options/loadBarDetails.js","Components/Options/LoadBar.js","Components/Options/filterResults.js","Components/Options/sortJobsBy.js","Components/goToTopBot.js","Components/advancedOptions/advancedOptions.js","Components/mainPage/jobPage.js","Components/savedPage/SavedJobsPage.js","Components/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","MySearchContext","React","createContext","Search","props","isMountedRef","useRef","useState","top","setState","value","searchState","setSearchState","locationState","setLocationState","useEffect","current","previousYPos","pageYOffset","addEventListener","e","currentYPos","changeSearch","target","changeLocation","id","style","Consumer","context","onSubmit","type","onChange","required","placeholder","className","onClick","Link","site","href","link","rel","SiteLink","this","Component","JobBlock","compare","previous","next","oldPropsKeys","Object","keys","newPropsKeys","length","newPropsHasOwnProperty","hasOwnProperty","bind","i","shouldComponentUpdate","nextProps","nextState","componentDidMount","saved","get","jobDetails","company","position","undefined","saveJob","a","jobDate","Date","setDate","getDate","time","set","getTime","postedAt","toISOString","split","removeJob","del","removeCallback","isSaved","layout","summary","LoadBarDetails","display","setstate","displayRef","ref","setTimeout","clearTimeout","info","LoadBar","displayLoadbar","width","loadBarProgress","FilterResults","prevResult","filter","event","list","lowerCasedResult","toLowerCase","trim","jobResults","job","doesMatchCompany","includes","changeJobs","changeFilter","checked","checkList","document","getElementById","getElementsByClassName","onclick","evt","classList","contains","remove","add","tabIndex","defaultChecked","changeLayout","key","sortResults","showAdvanced","htmlFor","sortBy","name","defaultValue","initialResults","onFilter","GoToTopBot","scrollTo","left","behavior","xmlns","viewBox","data-name","d","documentElement","scrollHeight","FormPage","changeExtraParameters","parentElement","childNodes","textContent","parameter","getAttribute","changeExtraParametersInfo","showIndeed","indeedButton","showReed","reedButton","showJobsite","jobSiteButton","preventDefault","showExtra","styleClass","searchBy","loadIndeed","loadReed","loadJobSite","Indeed","extraParametersInfo","Job","Rad","Sal","min","max","step","Jobsite","JobSite","Reed","resetOptions","JobPage","handleFormChange","b","c","widthResults","map","data","SavedJobsPage","jobs","push","savedJobs","removeItem","item","colLayout","rowLayout","indexedDB","App","loadJobs","searchValue","locationValue","whatSitesToLoad","url","URL","searchParams","entries","itemKey","slice","prompt","sse","EventSource","stateArray","loaded","isDownloading","removeEventListener","newData","closeData","close","onopen","onerror","eventPhase","JSON","parse","quickSortData","sortData","results","array","pivot","lessThanPivot","moreThanPivot","to","Provider","changeSearchValue","changeLocationValue","clearValues","path","ReactDOM","render","StrictMode","process","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.96627126.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport const MySearchContext = React.createContext()\r\n","import React, { useEffect, useState, useRef} from 'react';\r\nimport './searchStyles.scss'\r\nimport {MySearchContext} from '../searchBarContext'\r\n export const Search = (props) => {\r\n    const isMountedRef = useRef(false);\r\n    // constructor(props){\r\n    //     super(props)\r\n    //     this.state={\r\n    //         top: '1%',\r\n    //     }\r\n    // }\r\n    const [state, setState]= useState({top:'1%'})\r\n    const[searchState, setSearchState] = useState({value: ''})\r\n    const[locationState, setLocationState] = useState({value: ''})\r\n\r\n    useEffect(() => {\r\n        isMountedRef.current = true;\r\n        let previousYPos = window.pageYOffset;\r\n        window.addEventListener('scroll', e=>{\r\n            let currentYPos = window.pageYOffset;\r\n            if(isMountedRef.current){\r\n                if(previousYPos > currentYPos){\r\n                setState({\r\n                    top: '1%',\r\n                });\r\n            }else{\r\n                setState({\r\n                    top: '-200px',\r\n                });\r\n            }\r\n            }\r\n            \r\n            previousYPos = currentYPos;\r\n        })\r\n        return () => {\r\n            isMountedRef.current = false;\r\n        }\r\n    }, [])\r\n\r\n    const changeSearch = (e)=>{\r\n        setSearchState({value: e.target.value});\r\n    }\r\n    const changeLocation = (e)=>{\r\n        setLocationState({value: e.target.value})\r\n    }\r\n    \r\n        return (\r\n            <div id=\"search\" style={{top:state.top}}>\r\n                <MySearchContext.Consumer>\r\n                    {context=>\r\n                        <form onSubmit={(e)=>context.onSubmit( e, searchState.value, locationState.value)}>\r\n                            <input type=\"search\" \r\n                            onChange={changeSearch} \r\n                            value={searchState.value} \r\n                            required \r\n                            placeholder=\"Search Jobs\"/>  \r\n                            <input id=\"location\" type=\"search\" \r\n                            onChange={changeLocation} \r\n                            value={locationState.value} required placeholder=\"Location\"/> \r\n                            <div className=\"button\">\r\n                                <button className=\"clear\" type=\"submit\">Search</button>\r\n                                <button className=\"clear\" type=\"button\" value=\"\" \r\n                                    onClick={e=>{\r\n                                        changeSearch(e);\r\n                                        changeLocation(e);\r\n                                    }}\r\n                                >Clear</button>\r\n                            </div> \r\n                        </form>\r\n                    }\r\n                </MySearchContext.Consumer>\r\n            </div>\r\n            \r\n        )\r\n    \r\n}\r\n\r\nexport default Search\r\n","import React from 'react';\r\nimport './link.scss';\r\nconst Link =(props)=> {\r\n    \r\n        if(props.site === 'indeed' || props.site === 'reed'){\r\n           return (\r\n                <a href={`https://www.${props.site}.co.uk${props.link}`} target=\"_blank\" rel=\"noopener noreferrer\">Link to job</a>\r\n            ) \r\n        }\r\n        return (\r\n            <a href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">Link to job</a>\r\n        )\r\n    \r\n}\r\n\r\nexport default Link\r\n","import React, { Component } from 'react'\r\n\r\nexport class SiteLink extends Component {\r\n    render() {\r\n        return (\r\n            <a className=\"site\" href={`http://www.${this.props.site}.co.uk`}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n            >{this.props.site}</a>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SiteLink\r\n","import React from 'react';\r\nimport './jobBlock.scss';\r\nimport Link from '../jobLink'\r\nimport SiteLink from '../siteLink';\r\nimport {get, set, del} from 'idb-keyval';\r\n\r\nclass JobBlock extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            saved: this.props.isSaved,\r\n        }\r\n    }\r\n    //Compares the old props to the new props to see whether it should update\r\n    // used this site as a reference: \r\n    //https://developmentarc.gitbooks.io/react-indepth/content/life_cycle/update/using_should_component_update.html\r\n    \r\n    compare=(previous, next) => {\r\n        //test if same object\r\n        if (previous === next) {\r\n            return true;\r\n        }\r\n        //tests if bother props objs are not null and are objects\r\n        if (typeof previous !== 'object' || previous === null ||\r\n            typeof next !== 'object' || next === null) {\r\n            return false;\r\n        }\r\n\r\n        //Creates array of keys from each props so we can test if they are the same length\r\n        //and has the same values in the for loop\r\n        const oldPropsKeys = Object.keys(previous);\r\n        const newPropsKeys = Object.keys(next);\r\n\r\n        if (oldPropsKeys.length !== newPropsKeys.length) {\r\n            return false;\r\n        }\r\n\r\n        const newPropsHasOwnProperty = hasOwnProperty.bind(next);\r\n        for (var i = 0; i < oldPropsKeys.length; i++) {\r\n            if (!newPropsHasOwnProperty(oldPropsKeys[i]) || previous[oldPropsKeys[i]] !== next[oldPropsKeys[i]]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    shouldComponentUpdate = (nextProps, nextState)=>{\r\n        return !(this.compare(this.props, nextProps))  || !(this.compare(this.state, nextState))\r\n    }\r\n    //Checks to see if the component is already saved\r\n    componentDidMount = ()=>{\r\n        if(!this.state.saved){\r\n           get(`${this.props.jobDetails.company}_${this.props.jobDetails.position}`)\r\n            .then((value)=>{\r\n                if(value!==undefined){\r\n                    this.setState({saved:true})\r\n                }\r\n            }) \r\n        }\r\n        \r\n    }\r\n    saveJob = async () =>{\r\n        const jobDate = new Date();\r\n        jobDate.setDate(jobDate.getDate()-this.props.jobDetails.time);\r\n        set(`${this.props.jobDetails.company}_${this.props.jobDetails.position}`, {\r\n            ...this.props.jobDetails,\r\n            time: jobDate.getTime(),\r\n            postedAt: jobDate.toISOString().split('T')[0],\r\n        })\r\n            .then(()=> {\r\n                this.setState({saved: true}, ()=> console.log('saved'))})\r\n            .catch((e)=>{console.log(`error ${e}`)})\r\n    }\r\n    removeJob = async () =>{\r\n        del(`${this.props.jobDetails.company}_${this.props.jobDetails.position}`)\r\n            .then(()=> {\r\n                this.setState({saved: false},()=>{\r\n                if(this.props.removeCallback !== undefined){\r\n                    this.props.removeCallback()\r\n                }})\r\n            })\r\n    }\r\n    render(){\r\n        return(\r\n            <li className={`item ${this.props.layout}`}>\r\n                <div className=\"logo\">\r\n                </div>\r\n  \r\n                <div className=\"grid\">\r\n                    <div className=\"features\">\r\n                        <p className=\"company\">{this.props.jobDetails.company}</p>\r\n                    </div>\r\n                    <h2 className=\"jobName\">\r\n                        {this.props.jobDetails.position}  \r\n                    </h2>\r\n                    <div className=\"extraInfo\">\r\n                        <p>{this.props.jobDetails.postedAt}</p> \r\n                        <p>{this.props.jobDetails.location}</p> \r\n                    </div>  \r\n                </div>\r\n                <hr className=\"lineBreak\"/>\r\n                <div className=\"tags\">\r\n                    <p>{this.props.jobDetails.summary}</p>\r\n                    {this.state.saved === false &&\r\n                        <button className=\"save\" onClick={this.saveJob}>Save</button>\r\n                    }\r\n                    {this.state.saved=== true &&\r\n                         <button className=\"save\" onClick={this.removeJob}>Remove</button>\r\n                    }\r\n                    <Link link={this.props.jobDetails.link} site={this.props.jobDetails.site}/>\r\n                </div> \r\n                <SiteLink site={this.props.jobDetails.site}/>   \r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JobBlock","import React ,{useRef, useEffect, useState}from 'react'\r\n\r\n\r\nexport default function LoadBarDetails(props) {\r\n    const [state, setstate] = useState({display: props.display}) \r\n    const displayRef = useRef('none');\r\n    const ref = useRef(0)\r\n    useEffect(() => {\r\n        console.log(props.display)\r\n        console.log(displayRef.current)\r\n        if(props.display==='none'){\r\n            ref.current = setTimeout(()=>setstate({display: 'none'}), 3000)\r\n        } else if(props.display==='block'){\r\n            clearTimeout(ref.current)\r\n            if(state.display !== 'block')setstate({display: 'block'});\r\n            \r\n        }\r\n       \r\n       \r\n    }, [props.info, props.display])\r\n    \r\n    return (\r\n        \r\n        <div className=\"loadBarDetails\" style={{'display': state.display}}><p>{props.info}</p></div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport './loadBar.scss'\r\nimport LoadBarDetails from './loadBarDetails'\r\nimport { MySearchContext } from '../searchBarContext'\r\nclass LoadBar extends Component {\r\n    \r\n    render() { \r\n        return (\r\n            <MySearchContext.Consumer>\r\n                {context=>\r\n                    <>\r\n                        <div className=\"loadBar\" style={{display: context.state.displayLoadbar}}>\r\n                            <div style={{width:`${context.state.loadBarProgress}%`}}/>\r\n                        </div>\r\n                        <LoadBarDetails info={context.state.info} display={context.state.displayLoadbar}/>\r\n                        \r\n                    </>\r\n                }\r\n            </MySearchContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoadBar\r\n","import React ,{ useEffect, useRef} from 'react'\r\n\r\nexport default function FilterResults(props) {\r\n    const ref = useRef(\r\n       {\r\n            'indeed': true,\r\n            'jobSite': true,\r\n            'reed': true,\r\n        }\r\n    )\r\n    const prevResult=useRef('') \r\n    \r\n    \r\n    \r\n    const filter = (event) =>{\r\n        let list = [];\r\n        const lowerCasedResult= (prevResult.current==='')? event.target.value : event.target.value.toLowerCase().trim();\r\n        list = props.jobResults.filter(job=> {\r\n            console.log(job.company, job.position)\r\n            console.log((typeof job.company != 'undefined'));\r\n            console.log(typeof job.company)\r\n            console.log((typeof job.position !== undefined))\r\n            const doesMatchCompany= (typeof job.company != 'undefined')?job.company.toLowerCase().includes(lowerCasedResult): false;\r\n            const doesMatchJob= (typeof job.position !== undefined)?job.position.toLowerCase().includes(lowerCasedResult): false;\r\n            return  ((doesMatchJob||\r\n            doesMatchCompany)&&\r\n            ref.current[job.site]=== true\r\n            )\r\n        })\r\n        \r\n        props.changeJobs(list)\r\n        prevResult.current = event.target.value\r\n    }\r\n    \r\n    const changeFilter=(event)=>{\r\n         console.log(event.target.value);\r\n        ref.current[event.target.value] = event.target.checked;\r\n         console.log(event.target.checked);\r\n        filter({target:{value: prevResult.current}})\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const checkList = document.getElementById('list1');\r\n        checkList.getElementsByClassName('anchor')[0].onclick = function(evt) {\r\n            if (checkList.classList.contains('visible'))\r\n                checkList.classList.remove('visible');\r\n            else\r\n                checkList.classList.add('visible');\r\n            }\r\n        \r\n    }, [])\r\n    \r\n    const changeLayout=(e)=>{\r\n        console.log('changing');\r\n        if(e.target.value === 'row'){\r\n            props.changeLayout('', '');\r\n        }else if(e.target.value === 'columnSmall'){\r\n            props.changeLayout('colSmallUl', 'colSmallLi');\r\n        }else if(e.target.value === 'columnLarge'){\r\n            props.changeLayout('colSmallUl', 'colMedLi');\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <>  <label style={{\r\n        'margin': '5px'}}>Filter Results by:\r\n            <input type=\"text\" id=\"filterSearchBar\" onChange={filter} style={{ 'width': 'auto'}} placeholder=\"Filter Results\"/>\r\n        </label>\r\n        <div className=\"filterSites\">\r\n            <div id=\"list1\" className=\"dropdown-check-list\" tabIndex=\"100\">\r\n                <span className=\"anchor\">Filter by Sites</span>\r\n                <ul className=\"items\">\r\n                    <li><input type=\"checkbox\" onChange={changeFilter} style={{'backgroundColor': 'white', 'width': 'auto'}} value=\"jobSite\" defaultChecked/>JobSite</li>\r\n                    <li><input type=\"checkbox\" onChange={changeFilter} style={{'backgroundColor': 'white', 'width': 'auto'}} value=\"reed\" defaultChecked/>Reed </li>\r\n                    <li><input type=\"checkbox\" onChange={changeFilter} style={{'backgroundColor': 'white', 'width': 'auto'}} value=\"indeed\" defaultChecked/>Indeed </li>\r\n                </ul>\r\n            </div>\r\n\r\n\r\n            <select className=\"layout\"  onChange={changeLayout}>\r\n                <option value=\"row\" key=\"row\">Row</option>\r\n                <option value=\"columnSmall\" key=\"colSmall\">Column Small</option>\r\n                <option value=\"columnLarge\" key=\"colLarge\">Column medium</option>\r\n            </select>\r\n        </div>\r\n\r\n            \r\n\r\n        </>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport FilterResults from './filterResults'\r\nimport { MySearchContext } from '../searchBarContext'\r\n\r\nexport default function sortResults() {\r\n\r\n    return (\r\n        <MySearchContext.Consumer>\r\n            {context=>\r\n            <>  \r\n                <button className=\"clear\" onClick={context.showAdvanced} style={{'textDecoration': 'underline'}}>Advance search options</button>\r\n                \r\n                <label id=\"sortBy\" htmlFor=\"searchtype\">Sort by:\r\n                    <select value={context.state.sortBy} name=\"options\" id=\"searchBy\" onChange={context.sortBy}>\r\n                        <option value=\"id\" defaultValue>ID</option>\r\n                        <option value=\"time\">Time</option>\r\n                    </select>\r\n                </label>   \r\n                <FilterResults jobResults={context.state.initialResults} changeJobs={context.onFilter} changeLayout={context.changeLayout}/>\r\n                \r\n                <hr/>\r\n            </>\r\n            }\r\n        </MySearchContext.Consumer>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport './goToStyles.scss'\r\n\r\nexport default function GoToTopBot() {\r\n    const scrollTop =()=>{\r\n        window.scrollTo({\r\n            top:0,\r\n            left:0,\r\n            behavior: 'smooth',\r\n        })\r\n    }\r\n\r\n    const scrollBot =()=>{\r\n        window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            left: 0,\r\n            behavior: 'smooth',\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"scrollTo\">\r\n            <button id=\"top\" onClick={scrollTop} >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 42.67 64\"><defs></defs><title>Asset 45</title><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><path className=\"cls-1\" d=\"M19.57.78.78,19.5a2.67,2.67,0,0,0,3.77,3.78L18.67,9.21V61.33a2.67,2.67,0,1,0,5.33,0V9L38.11,23.27a2.67,2.67,0,1,0,3.78-3.76L23.35.79a2.67,2.67,0,0,0-3.78,0Z\"/></g></g></svg>\r\n            </button>\r\n            <button id=\"bottom\" onClick={scrollBot} >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 42.67 64\"><defs></defs><title>Asset 44</title><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><path className=\"cls-1\" d=\"M23.1,63.22,41.88,44.5a2.67,2.67,0,1,0-3.76-3.78L24,54.79V2.67a2.67,2.67,0,1,0-5.33,0V55L4.56,40.73a2.67,2.67,0,0,0-3.77,0A2.63,2.63,0,0,0,0,42.61a2.68,2.68,0,0,0,.77,1.88L19.32,63.21a2.67,2.67,0,0,0,3.78,0Z\"/></g></g></svg>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport './advancedOptions.scss'\r\nimport { MySearchContext } from '../searchBarContext'\r\n\r\n\r\nclass FormPage extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            styleClass:\"\",\r\n            showIndeed: 'none',\r\n            showJobsite: 'none',\r\n            showReed: 'none',\r\n            indeedButton: 'Show',\r\n            reedButton: 'Show',\r\n            jobSiteButton: 'Show',\r\n            \r\n        }\r\n    }\r\n   changeExtraParameters=e=>{\r\n        const value = e.target.value\r\n        const location = e.target.parentElement.parentElement.parentElement.childNodes[0].childNodes[0].textContent;\r\n        const parameter = e.target.getAttribute('name');\r\n        console.log(location, parameter, value)\r\n       this.props.changeExtraParametersInfo(location, parameter, value)\r\n   }\r\n\r\n   showIndeed= ()=>{\r\n       this.setState({\r\n           showIndeed: (this.state.showIndeed==='block')?'none': 'block',\r\n           indeedButton :(this.state.showIndeed==='block')? 'Show': 'Hide',\r\n       })\r\n   }\r\n   showReed=()=>{\r\n        this.setState({\r\n            showReed: (this.state.showReed==='block')?'none': 'block',\r\n            reedButton :(this.state.showReed==='block')? 'Show': 'Hide',\r\n        })\r\n   }\r\n   showJobsite=()=>{\r\n        this.setState({\r\n            showJobsite: (this.state.showJobsite==='block')?'none': 'block',\r\n            jobSiteButton :(this.state.showJobsite==='block')? 'Show': 'Hide',\r\n        })\r\n   }\r\n\r\n   onSubmit=(e)=>{\r\n    e.preventDefault();\r\n   }\r\n\r\n   showExtra=(e)=>{\r\n       this.setState({\r\n           [e.target.value] :(e.target.checked)? 'grid': 'none',\r\n           \r\n       })\r\n    \r\n   }\r\n    render() {\r\n        return (\r\n            <MySearchContext.Consumer>\r\n                {context=>\r\n                <div id=\"frontPage\" className={context.state.showAdvanced} >\r\n                    <div id=\"formDiv\">\r\n                        \r\n                        <form id=\"form\" onSubmit={this.onSubmit}>\r\n                            \r\n                            <h3>Advance search options</h3>\r\n                                  \r\n                            <label htmlFor=\"searchBy\">Search Website by:\r\n                                <select name=\"options\" id=\"searchBy\" onChange={context.searchBy} value={context.state.searchBy}>\r\n                                    <option value=\"R\">Most Relevant</option>\r\n                                    <option value=\"DD\">Most Recent</option>\r\n                                </select>\r\n                            </label>\r\n                            <label htmlFor=\"websites\"  style={{'fontWeight': '600','marginTop': '15px'}}>Which Websites:</label>\r\n                            <div className=\"whichSite card\">\r\n                                \r\n                                \r\n                                <label htmlFor=\"indeed\">Indeed:\r\n                                <input type=\"checkBox\" name=\"websites\" id=\"indeed\" value=\"Indeed\" onChange={e=>{context.loadIndeed(e); this.showExtra(e)}} checked={context.state.loadIndeed}/>\r\n                                </label>\r\n                                <label htmlFor=\"reed\">Reed:\r\n                                <input type=\"checkBox\" name=\"websites\" id=\"reed\" value=\"Reed\" onChange={e=>{context.loadReed(e); this.showExtra(e)}} checked={context.state.loadReed}/>\r\n                                </label>\r\n                                <label htmlFor=\"jobsite\">Jobsite:\r\n                                <input type=\"checkBox\" name=\"websites\" id=\"jobsite\" value=\"Jobsite\" onChange={e=>{context.loadJobSite(e); this.showExtra(e)}} checked={context.state.loadJobSite}/>\r\n                                </label>\r\n                                \r\n                            </div>\r\n                            <h2>Extra Parameters</h2>\r\n                        <div className=\"options extraParameters\">\r\n                             \r\n                            <div className=\"card\" style={{'display': this.state.Indeed}}>\r\n                                <div className=\"extraParaheader\">\r\n                                    <h5>Indeed</h5>\r\n                <button type=\"button\" className=\"clear\" onClick={this.showIndeed}>{this.state.indeedButton}</button>\r\n                                </div>\r\n                                \r\n                                <div className=\"extraDetails\" style={{'display': this.state.showIndeed}}>\r\n                                    <label>\r\n                                        DatePosted:\r\n                                        <select name=\"Date\" onChange={this.changeExtraParameters} value={context.state.extraParametersInfo.Indeed.Date}>\r\n                                            <option value=\"none\">All</option>\r\n                                            <option value=\"1\">Past 24 hours</option>\r\n                                            <option value=\"7\">Past week</option>\r\n                                            <option value=\"14\">Past 2 weeks</option>\r\n                                        </select>\r\n                                    </label>\r\n                                    <label>\r\n                                        Job Type:\r\n                                        <select name=\"Job\" onChange={this.changeExtraParameters} value={context.state.extraParametersInfo.Indeed.Job}>\r\n                                            <option value=\"none\">All</option>\r\n                                            <option value=\"temporary\">Temporary</option>\r\n                                            <option value=\"fulltime\">FullTime</option>\r\n                                            <option value=\"parttime\">Part-Time</option>\r\n                                        </select>\r\n                                    </label>\r\n                                    <label>\r\n                                        Radius:\r\n                                        <select name=\"Rad\" onChange={this.changeExtraParameters} value={context.state.extraParametersInfo.Indeed.Rad}>\r\n                                            <option value=\"none\">All</option>\r\n                                            <option value=\"0\">0</option>\r\n                                            <option value=\"5\">5</option>\r\n                                            <option value=\"10\">10</option>\r\n                                            <option value=\"15\">15</option>\r\n                                            <option value=\"25\">25</option>\r\n                                            <option value=\"50\">50</option>\r\n                                            <option value=\"100\">100</option>\r\n                                        </select>\r\n                                    </label>\r\n                                    <label>\r\n                                        Minimum Salary: {context.state.extraParametersInfo.Indeed.Sal}\r\n                                        <input name=\"Sal\" type=\"range\" min={0} max={110} step={1} \r\n                                            value={(context.state.extraParametersInfo.Indeed.Sal==='none')? 0: +context.state.extraParametersInfo.Indeed.Sal/1000}\r\n                                            onChange={this.changeExtraParameters} />\r\n                                    </label>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            <div className=\"card\" style={{'display': this.state.Jobsite}}>\r\n                                <div className=\"extraParaheader\">\r\n                                    <h5>JobSite</h5>\r\n                                <button className=\"clear\" onClick={this.showJobsite}>{this.state.jobSiteButton}</button>\r\n                                    \r\n                                </div>\r\n                                \r\n                                <div className=\"extraDetails\" style={{'display': this.state.showJobsite}}>\r\n                                <label>\r\n                                    DatePosted:\r\n                                    <select name=\"Date\" onChange={this.changeExtraParameters} value={context.state.extraParametersInfo.JobSite.Date}>\r\n                                        <option value=\"none\">All</option>\r\n                                        <option value=\"1\">Past 24 hours</option>\r\n                                        <option value=\"3\">Past 3 days</option>\r\n                                        <option value=\"7\">Past week</option>\r\n                                        <option value=\"14\">Past 2 weeks</option>\r\n                                    </select>\r\n                                </label>\r\n                                <label>\r\n                                    Job Type:\r\n                                    <select name=\"Job\" onChange={this.changeExtraParameters} value={context.state.extraParametersInfo.JobSite.Job}>\r\n                                        <option value=\"none\">All</option>\r\n                                        <option value=\"temporary\">Temporary</option>\r\n                                        <option value=\"permanent\">FullTime</option>\r\n                                        <option value=\"part-time\">Part-Time</option>\r\n                                    </select>\r\n                                </label>\r\n                                <label>\r\n                                    Radius:\r\n                                    <select name=\"Rad\" onChange={this.changeExtraParameters} value={context.state.extraParametersInfo.JobSite.Rad}>\r\n                                    <   option value=\"none\">All</option>\r\n                                        <option value=\"0\">0</option>\r\n                                        <option value=\"5\">5</option>\r\n                                        <option value=\"10\">10</option>\r\n                                        <option value=\"20\">20</option>\r\n                                        <option value=\"30\">30</option>\r\n                                    </select>\r\n                                </label>\r\n                                <label>\r\n                                    Minimum Salary: {context.state.extraParametersInfo.JobSite.Sal}\r\n                                    <input name=\"Sal\" type=\"range\" min={0} max={110} step={10} \r\n                                        value={(context.state.extraParametersInfo.JobSite.Sal==='none')? 0: +context.state.extraParametersInfo.JobSite.Sal/1000}\r\n                                        onChange={this.changeExtraParameters}/>\r\n                                </label>\r\n                                </div>\r\n                               \r\n                            </div>\r\n                            <div className=\"card\" style={{'display': this.state.Reed}}>\r\n                                <div className=\"extraParaheader\">\r\n                                    <h5>Reed</h5>\r\n                <button className=\"clear\" onClick={this.showReed}>{this.state.reedButton}</button> \r\n                                </div>\r\n                                \r\n                                <div className=\"extraDetails\" style={{'display': this.state.showReed}}>\r\n                                    <label>\r\n                                    DatePosted:\r\n                                    <select name=\"Date\" onChange={this.changeExtraParameters} value={context.state.extraParametersInfo.Reed.Date}>\r\n                                        <option value=\"none\">All</option>\r\n                                        <option value=\"Today\">Past 24 hours</option>\r\n                                        <option value=\"LastThreeDays\">Past 3 days</option>\r\n                                        <option value=\"LastWeek\">Past week</option>\r\n                                        <option value=\"LastTwoWeeks\">Past 2 weeks</option>\r\n                                    </select>\r\n                                </label>\r\n                                <label>\r\n                                    Job Type:\r\n                                    <select name=\"Job\" onChange={this.changeExtraParameters} value={context.state.extraParametersInfo.Reed.Job}>\r\n                                        <option value=\"none\">All</option>\r\n                                        <option value=\"temp\">Temporary</option>\r\n                                        <option value=\"perm\">Permanent</option>\r\n                                        <option value=\"fulltime\">FullTime</option>\r\n                                        <option value=\"parttime\">Part-Time</option>\r\n                                        <option value=\"contract\">Contract</option>\r\n                                    </select>\r\n                                </label>\r\n                                <label>\r\n                                    Radius:\r\n                                    <select name=\"Rad\" onChange={this.changeExtraParameters} value={context.state.extraParametersInfo.Reed.Rad}>\r\n                                        <option value=\"none\" defaultValue>All</option>\r\n                                        <option value=\"0\">0</option>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"5\">5</option>\r\n                                        <option value=\"10\">10</option>\r\n                                        <option value=\"20\">20</option>\r\n                                        <option value=\"30\">30</option>\r\n                                        <option value=\"50\">50</option>\r\n                                    </select>\r\n                                </label>\r\n                                <label>\r\n                                    Minimum Salary: {context.state.extraParametersInfo.Reed.Sal}\r\n                                    <input name=\"Sal\" type=\"range\" min={0} max={110} step={2} \r\n                                        value={(context.state.extraParametersInfo.Reed.Sal==='none')? 0: +context.state.extraParametersInfo.Reed.Sal/1000}\r\n                                        onChange={this.changeExtraParameters}/>\r\n                                </label>\r\n                                    \r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n\r\n   \r\n                            <button type=\"submit\" className=\"clear\" id=\"formSubmit\" onClick={context.resetOptions}>Reset</button>\r\n                        </form>    \r\n                    </div>\r\n                    \r\n                </div>\r\n            }</MySearchContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormPage\r\n","import React from 'react';\r\nimport Search from '../Options/searchBar';\r\nimport JobBlock from './jobBlock';\r\nimport LoadBar from '../Options/LoadBar';\r\nimport '../styles.scss';\r\nimport '../advancedOptions/advancedOptions.scss'\r\nimport SortResults from '../Options/sortJobsBy'\r\nimport GoToTopBot from '../goToTopBot';\r\nimport FormPage from '../advancedOptions/advancedOptions'\r\nclass JobPage extends React.Component{\r\n\r\n    handleFormChange= (a, b, c)=>{\r\n        this.props.changeExtraParametersInfo(a, b, c);\r\n    }\r\n    render(){\r\n        return(\r\n            <> \r\n                <div className=\"select\">\r\n                <div id=\"headerBackground\">\r\n                </div>\r\n                <Search/>    \r\n                <LoadBar/>\r\n                <SortResults/>\r\n                </div>\r\n                <FormPage changeExtraParametersInfo= {this.handleFormChange}/>\r\n    \r\n                <ul className={`listOfJobs ${this.props.widthResults} ${this.props.layout[0]}`}  >\r\n                {this.props.jobResults.length >= 0 &&\r\n                this.props.jobResults.map(data => {\r\n                    return(\r\n                    <JobBlock key={data.id} jobDetails={data} isSaved={false} layout={this.props.layout[1]}/>\r\n                    )\r\n                })\r\n                }\r\n                {this.props.jobResults.length === 0 &&\r\n                <div>\r\n                    <p>There's nothing here</p>\r\n                </div>\r\n                }\r\n                </ul>\r\n                <GoToTopBot/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JobPage","import React, { Component } from 'react'\r\nimport JobBlock from '../mainPage/jobBlock'\r\nimport GoToTopBot from '../goToTopBot'\r\nimport {get , keys } from 'idb-keyval'\r\nimport FilterResults from '../Options/filterResults'\r\nimport './savedJobs.scss'\r\nexport default class SavedJobsPage extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            savedJobs: [],\r\n            initialResults: [],\r\n            layout: ['',''],\r\n        }\r\n    }\r\n    componentDidMount = async() =>{\r\n       \r\n        const jobs = []\r\n     keys()\r\n        .then((keys) => {\r\n            for(const key of keys){\r\n                console.log(key);\r\n                get(key).then((value)=>{\r\n                    value.id=key\r\n                    jobs.push(value)  \r\n                })\r\n                .then(()=>{\r\n                    this.setState({\r\n                        savedJobs: jobs,\r\n                        initialResults: jobs,\r\n                    })\r\n                }) \r\n            }\r\n        }) \r\n    }\r\n\r\n    removeItem = id=>{\r\n        const list = this.state.savedJobs.filter(item =>item.id !== id)\r\n        this.setState({\r\n            savedJobs: list,\r\n        });\r\n    }\r\n    onFilter = (value)=>{\r\n        this.setState({\r\n            savedJobs: value\r\n        })\r\n    }\r\n    changeLayout= (colLayout, rowLayout)=>{\r\n        console.log(`changing Layout ${colLayout} ${rowLayout}`);\r\n        this.setState({layout: [colLayout, rowLayout]}, ()=>{\r\n          console.log(`layout changed ${this.state.layout}`)\r\n        })\r\n    }\r\n    render() {\r\n        if (!window.indexedDB) {\r\n            return(\r\n                <div>\r\n                    <div id=\"headerBackground\">\r\n                    </div>\r\n                    <p>You have no Jobs Saved due to IndexedDb not being supported \r\n                        on your browser.\r\n                    </p>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <div id=\"headerBackground\">\r\n                </div>\r\n                <div id=\"savedFilter\">\r\n                    <h1>Saved Jobs</h1>\r\n                 <FilterResults jobResults={this.state.initialResults} changeJobs={this.onFilter} changeLayout={this.changeLayout}/>\r\n                </div>\r\n                 <hr/>\r\n                <ol id=\"savedResults\" className = {this.state.layout[0]}>\r\n                    {this.state.savedJobs.map(data=>(\r\n                        <JobBlock  key={data.id} jobDetails={data} removeCallback={e=>this.removeItem(data.id)} isSaved={true} layout={this.state.layout[1]} />\r\n                    ))}\r\n                    \r\n                </ol>\r\n                <GoToTopBot/>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport JobPage from \"./mainPage/jobPage\";\r\nimport SavedJobsPage from './savedPage/SavedJobsPage'\r\nimport {MySearchContext} from './searchBarContext';\r\n\r\nclass App extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.isDownloading = false;\r\n    \r\n    this.state = {\r\n        layout : ['',''],\r\n        initialResults:[],\r\n        jobResults: [],\r\n        searchValue:'',\r\n        locationValue:'',\r\n        displayLoadbar: 'none',\r\n        loadBarProgress: 0,\r\n        loadIndeed: true,\r\n        loadReed: true,\r\n        loadJobSite: true,\r\n        sortBy: 'id',\r\n        searchBy: 'R',\r\n        info: '',\r\n        extraParametersInfo: {\r\n          Indeed:{\r\n            Date: 'none',\r\n            Job: 'none',\r\n            Rad: 'none',\r\n            Sal: 'none',\r\n          },\r\n          Reed:{\r\n            Date: 'none',\r\n            Job: 'none',\r\n            Rad: 'none',\r\n            Sal: 'none',\r\n          },\r\n          JobSite:{\r\n            Date: 'none',\r\n            Job: 'none',\r\n            Rad: 'none',\r\n            Sal: 'none',\r\n          }\r\n        },\r\n        showAdvanced: 'none',\r\n        widthResults: 'show',\r\n    }\r\n  }\r\n\r\n\r\nloadJobs= (searchValue, locationValue) =>{\r\n    let whatSitesToLoad= {\r\n      'reed': !this.state.loadReed,\r\n      'jobSite': !this.state.loadJobSite,\r\n      'indeed': !this.state.loadIndeed,\r\n    } \r\n    \r\n    \r\n    let url = new URL('http://job-puppeteer-scraper.herokuapp.com/stream');\r\n    url.searchParams.set('q', searchValue);\r\n    url.searchParams.set('location', locationValue);\r\n    url.searchParams.set('indeed', this.state.loadIndeed);\r\n    url.searchParams.set('reed', this.state.loadReed);\r\n    url.searchParams.set('jobsite', this.state.loadJobSite);\r\n    if(this.state.sortBy !== 'R'){\r\n      url.searchParams.set('sortby', this.state.searchBy);\r\n    }\r\n    for(const key in this.state.extraParametersInfo){\r\n      if(this.state[`load${key}`]=== true){\r\n          for(const [itemKey, value] of Object.entries(this.state.extraParametersInfo[key])){\r\n            if(value !== 'none'){\r\n              console.log(`${key.slice(0,1).toLowerCase()}${itemKey}`, value);\r\n              url.searchParams.set(`${key.slice(0,1).toLowerCase()}${itemKey}`, value);\r\n            }\r\n          }\r\n      }\r\n    }\r\n      console.log(url);\r\n       url = prompt('Whats the new url?', url)\r\n      const sse = new EventSource(url);\r\n      let stateArray = []; \r\n      let loaded = false;\r\n      this.isDownloading = true;\r\n      this.setState({\r\n        displayLoadbar: 'block',\r\n        loadBarProgress:1,\r\n        info: 'sending...'\r\n      })\r\n      //closes the connection and tells the user that the connection\r\n      // couldnt connect if no response from the server in 12seconds\r\n      setTimeout(()=>{\r\n        if(loaded === false){\r\n          console.log('error loading')\r\n          this.setState({\r\n            info:'Connection Error, Closing connection',\r\n            displayLoadbar: 'none',\r\n          })\r\n          sse.removeEventListener('error', event => {\r\n            whatSitesToLoad[`${event.data}`]=true;\r\n            console.log(`server could not load ${event.data}`)\r\n          })\r\n          sse.removeEventListener('newData', e=> newData(e));\r\n          sse.removeEventListener('close', e=> closeData(e))\r\n          sse.close()\r\n          \r\n        }\r\n      },12000)\r\n\r\n    sse.onopen = ()=> {\r\n        console.log(\"Sse connection opened\");\r\n        loaded=true;\r\n        this.setState({\r\n            jobResults : [],\r\n            loadBarProgress:22,\r\n            info: 'Connection established'\r\n         }, ()=>{\r\n           this.isDownloading=false;\r\n         })\r\n      };\r\n  \r\n    sse.onerror = (e)=> {\r\n        console.log(\"error occured \"+ e.eventPhase);\r\n        this.setState({info: 'Error occured while scrapping'})\r\n      };\r\n    const newData = event=>{\r\n      stateArray.push(JSON.parse(event.data))\r\n      this.setState({\r\n          jobResults : stateArray,\r\n          initialResults: stateArray,\r\n          //increases the loadbar by 2 till loadBar is complete\r\n          loadBarProgress: this.state.loadBarProgress+ 2,\r\n      })\r\n    }\r\n\r\n    const closeData =event=>{\r\n      whatSitesToLoad[`${event.data}`]= true;   \r\n            console.log(`${event.data} finished`);\r\n            this.setState({\r\n              info: `${event.data} complete`\r\n            })\r\n            console.log(whatSitesToLoad);\r\n            //tests to see if all the required websites have been loaded\r\n        if(whatSitesToLoad['indeed'] &&\r\n            whatSitesToLoad['reed'] &&\r\n            whatSitesToLoad['jobSite']){\r\n              \r\n          console.log('closing connection');\r\n          sse.close();\r\n          this.setState({\r\n              loadBarProgress: 100,\r\n              displayLoadbar: 'none',\r\n              info: 'Scraping complete',\r\n              jobResults: this.quickSortData(this.state.jobResults, this.state.sortBy)\r\n          })\r\n        }\r\n        sse.removeEventListener('error', event => {\r\n          whatSitesToLoad[`${event.data}`]=true;\r\n          console.log(`server could not load ${event.data}`)\r\n        })\r\n        sse.removeEventListener('newData', e=> newData(e));\r\n        sse.removeEventListener('close', e=> closeData(e))\r\n    }\r\n\r\n    \r\n    sse.addEventListener('newData', e=> newData(e));\r\n    sse.addEventListener('error', event => {\r\n      whatSitesToLoad[`${event.data}`]=true;\r\n      console.log(`server could not load ${event.data}`)\r\n    });\r\n    \r\n    sse.addEventListener('close', e=> closeData(e));\r\n  }\r\n  \r\n\r\n  quickSortData(array , sortBy){\r\n    if(array.length <= 1){\r\n        return array;\r\n    }\r\n    const pivot = array[array.length-1][sortBy];\r\n    const lessThanPivot=[];\r\n    const moreThanPivot=[];\r\n    for(let i = 0; i< array.length-1; i++){\r\n        if(+array[i][sortBy]<= pivot){\r\n            lessThanPivot.push(array[i]);\r\n        }else{\r\n            moreThanPivot.push(array[i]);\r\n        }\r\n    }\r\n    return [...this.quickSortData(lessThanPivot, sortBy),array[array.length-1],...this.quickSortData(moreThanPivot, sortBy)];\r\n  }\r\n \r\n  sortData=(results = this.state.jobResults)=>{\r\n        this.setState({\r\n            jobResults: this.quickSortData(results, this.state.sortBy),\r\n        })\r\n    }\r\n    changeExtraParametersInfo=(site, parameter, value)=>{\r\n      console.log(parameter, value, typeof value)\r\n        this.setState({\r\n          extraParametersInfo:{\r\n            ...this.state.extraParametersInfo,\r\n            [site]:{\r\n              ...this.state.extraParametersInfo[site],\r\n              [parameter]: (parameter==='Sal')?(+value === 0)? 'none': `${value*1000}`:value,\r\n            }\r\n          },\r\n\r\n        }, ()=>{console.log(this.state)})\r\n \r\n    }\r\n    showAdvanced=()=>{\r\n      this.setState({\r\n        showAdvanced: (this.state.showAdvanced==='inline-block')?'none' : 'inline-block',\r\n        widthResults: (this.state.showAdvanced==='inline-block')?'show' : 'hide',\r\n      })\r\n    }\r\n  render(){\r\n    return(\r\n    <Router>\r\n      <>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Job Results</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/saved\">Saved Jobs</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        \r\n        <MySearchContext.Provider value={{\r\n          state: this.state,\r\n          changeSearchValue: value =>this.setState({searchValue: value.target.value}),\r\n          changeLocationValue: value =>this.setState({locationValue: value.target.value}),\r\n          clearValues: ()=>{this.setState({\r\n            searchValue: '',\r\n            locationValue:'', \r\n          })\r\n          },\r\n          showAdvanced: value=>{this.showAdvanced(value)},\r\n          resetOptions: ()=>{\r\n            this.setState({\r\n              extraParametersInfo: {\r\n              Indeed:{\r\n                Date: 'none',\r\n                Job: 'none',\r\n                Rad: 'none',\r\n                Sal: 'none',\r\n              },\r\n              Reed:{\r\n                Date: 'none',\r\n                Job: 'none',\r\n                Rad: 'none',\r\n                Sal: 'none',\r\n              },\r\n              JobSite:{\r\n                Date: 'none',\r\n                Job: 'none',\r\n                Rad: 'none',\r\n                Sal: 'none',\r\n              }\r\n            }\r\n            })\r\n          },\r\n\r\n          onFilter: (value)=>this.sortData(value),\r\n          onSubmit: (e, searchValue, locationValue)=> {\r\n            e.preventDefault();\r\n            console.log(searchValue, locationValue)\r\n            this.loadJobs(searchValue, locationValue);\r\n          },\r\n          searchBy: value =>{\r\n            this.setState({\r\n              searchBy: value.target.value,\r\n            })\r\n          },\r\n          sortBy: value =>{\r\n            this.setState({\r\n              sortBy: value.target.value,\r\n              jobResults: this.quickSortData(this.state.jobResults, value.target.value),\r\n            })\r\n          },\r\n          loadIndeed: value =>this.setState({loadIndeed: value.target.checked}),\r\n          loadJobSite: value =>this.setState({loadJobSite: value.target.checked}),\r\n          loadReed: value =>this.setState({loadReed: value.target.checked}),\r\n          changeLayout: (colLayout, rowLayout)=>{\r\n            this.setState({layout: [colLayout, rowLayout]})\r\n          }\r\n        }}>\r\n          <Switch>\r\n\r\n            \r\n            <Route path=\"/saved\">\r\n              <SavedJobsPage />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <JobPage\r\n               jobResults = {this.state.jobResults}\r\n               changeExtraParametersInfo={this.changeExtraParametersInfo}\r\n               widthResults= {this.state.widthResults}\r\n               layout= {this.state.layout}\r\n               />\r\n            </Route>\r\n          </Switch>\r\n        </MySearchContext.Provider>\r\n      </>\r\n    </Router>\r\n  );\r\n  }\r\n    \r\n}\r\n\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './Components/App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}