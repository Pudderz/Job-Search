{"version":3,"sources":["serviceWorker.js","Components/searchBarContext.js","Components/Options/searchBar.js","Components/jobLink.js","Components/siteLink.js","Components/mainPage/jobBlock.js","Components/Options/loadBarDetails.js","Components/Options/LoadBar.js","Components/Options/filterResults.js","Components/Options/sortJobsBy.js","Components/goToTopBot.js","Components/advancedOptions/advancedOptions.js","Components/mainPage/jobPage.js","Components/savedPage/SavedJobsPage.js","Components/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","MySearchContext","React","createContext","Search","props","_isMounted","useState","top","setState","value","searchState","setSearchState","locationState","setLocationState","useEffect","previousYPos","pageYOffset","addEventListener","e","currentYPos","changeSearch","target","changeLocation","id","style","Consumer","context","onSubmit","type","onChange","required","placeholder","className","onClick","Link","site","href","link","rel","SiteLink","this","Component","JobBlock","compare","previous","next","oldPropsKeys","Object","keys","newPropsKeys","length","newPropsHasOwnProperty","hasOwnProperty","bind","i","shouldComponentUpdate","nextProps","nextState","componentDidMount","saved","get","jobDetails","company","position","undefined","saveJob","a","jobDate","Date","setDate","getDate","time","set","getTime","postedAt","toISOString","split","removeJob","del","removeCallback","isSaved","layout","summary","LoadBarDetails","display","setstate","displayRef","useRef","ref","current","setTimeout","clearTimeout","info","LoadBar","displayLoadbar","width","loadBarProgress","FilterResults","prevResult","filter","event","list","jobResults","lowerCasedResult","toLowerCase","trim","job","includes","changeJobs","changeFilter","checked","checkList","document","getElementById","getElementsByClassName","onclick","evt","classList","contains","remove","add","tabIndex","defaultChecked","changeLayout","key","sortResults","showAdvanced","htmlFor","sortBy","name","defaultValue","initialResults","onFilter","GoToTopBot","scrollTo","left","behavior","xmlns","viewBox","data-name","d","documentElement","scrollHeight","FormPage","changeExtraParameters","parentElement","childNodes","textContent","parameter","getAttribute","changeExtraParametersInfo","showIndeed","indeedButton","showLinked","displayLinked","linkedButton","showReed","reedButton","showJobsite","jobSiteButton","preventDefault","showExtra","styleClass","searchBy","loadLinkedIn","loadIndeed","loadReed","loadJobSite","LinkedIn","extraParametersInfo","Job","Indeed","Rad","Sal","min","max","step","Jobsite","JobSite","Reed","resetOptions","JobPage","handleFormChange","b","c","widthResults","map","data","SavedJobsPage","jobs","push","savedJobs","removeItem","item","colLayout","rowLayout","indexedDB","App","loadJobs","searchValue","locationValue","whatSitesToLoad","url","URL","searchParams","entries","itemKey","slice","sse","EventSource","stateArray","loaded","isDownloading","removeEventListener","newData","closeData","close","onopen","onerror","eventPhase","JSON","parse","quickSortData","sortData","results","array","pivot","lessThanPivot","moreThanPivot","to","Provider","changeSearchValue","changeLocationValue","clearValues","path","ReactDOM","render","StrictMode","process","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.37b37ece.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport const MySearchContext = React.createContext()\r\n","import React, { Component , useRef, useEffect, useState} from 'react';\r\nimport './searchStyles.scss'\r\nimport {MySearchContext} from '../searchBarContext'\r\n export const Search = (props) => {\r\n    let _isMounted = false\r\n    // constructor(props){\r\n    //     super(props)\r\n    //     this.state={\r\n    //         top: '1%',\r\n    //     }\r\n    // }\r\n    const [state, setState]= useState({top:'1%'})\r\n    const[searchState, setSearchState] = useState({value: ''})\r\n    const[locationState, setLocationState] = useState({value: ''})\r\n\r\n    useEffect(() => {\r\n        _isMounted = true;\r\n        let previousYPos = window.pageYOffset;\r\n        window.addEventListener('scroll', e=>{\r\n            let currentYPos = window.pageYOffset;\r\n            if(_isMounted){\r\n                if(previousYPos > currentYPos){\r\n                setState({\r\n                    top: '1%',\r\n                });\r\n            }else{\r\n                setState({\r\n                    top: '-200px',\r\n                });\r\n            }\r\n            }\r\n            \r\n            previousYPos = currentYPos;\r\n        })\r\n        return () => {\r\n            _isMounted =false\r\n        }\r\n    }, [])\r\n\r\n    const changeSearch = (e)=>{\r\n        setSearchState({value: e.target.value});\r\n    }\r\n    const changeLocation = (e)=>{\r\n        setLocationState({value: e.target.value})\r\n    }\r\n    \r\n        return (\r\n            <div id=\"search\" style={{top:state.top}}>\r\n                <MySearchContext.Consumer>\r\n                    {context=>\r\n                        <form onSubmit={(e)=>context.onSubmit( e, searchState.value, locationState.value)}>\r\n                            <input type=\"search\" \r\n                            onChange={changeSearch} \r\n                            value={searchState.value} \r\n                            required \r\n                            placeholder=\"Search Jobs\"/>  \r\n                            <input id=\"location\" type=\"search\" \r\n                            onChange={changeLocation} \r\n                            value={locationState.value} required placeholder=\"Location\"/> \r\n                            <div className=\"button\">\r\n                                <button className=\"clear\" type=\"submit\">Search</button>\r\n                                <button className=\"clear\" type=\"button\" value=\"\" \r\n                                    onClick={e=>{\r\n                                        changeSearch(e);\r\n                                        changeLocation(e);\r\n                                    }}\r\n                                >Clear</button>\r\n                            </div> \r\n                        </form>\r\n                    }\r\n                </MySearchContext.Consumer>\r\n            </div>\r\n            \r\n        )\r\n    \r\n}\r\n\r\nexport default Search\r\n","import React, { Component } from 'react';\r\nimport './link.scss';\r\nconst Link =(props)=> {\r\n    \r\n        if(props.site === 'indeed' || props.site === 'reed'){\r\n           return (\r\n                <a href={`https://www.${props.site}.co.uk${props.link}`} target=\"_blank\" rel=\"noopener noreferrer\">Link to job</a>\r\n            ) \r\n        }\r\n        return (\r\n            <a href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">Link to job</a>\r\n        )\r\n    \r\n}\r\n\r\nexport default Link\r\n","import React, { Component } from 'react'\r\n\r\nexport class SiteLink extends Component {\r\n    render() {\r\n        return (\r\n            <a className=\"site\" href={`http://www.${this.props.site}.co.uk`}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n            >{this.props.site}</a>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SiteLink\r\n","import React from 'react';\r\nimport './jobBlock.scss';\r\nimport Link from '../jobLink'\r\nimport SiteLink from '../siteLink';\r\nimport {get, set, del} from 'idb-keyval';\r\n\r\nclass JobBlock extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            saved: this.props.isSaved,\r\n        }\r\n    }\r\n    //Compares the old props to the new props to see whether it should update\r\n    // used this site as a reference: \r\n    //https://developmentarc.gitbooks.io/react-indepth/content/life_cycle/update/using_should_component_update.html\r\n    \r\n    compare=(previous, next) => {\r\n        //test if same object\r\n        if (previous === next) {\r\n            return true;\r\n        }\r\n        //tests if bother props objs are not null and are objects\r\n        if (typeof previous !== 'object' || previous === null ||\r\n            typeof next !== 'object' || next === null) {\r\n            return false;\r\n        }\r\n\r\n        //Creates array of keys from each props so we can test if they are the same length\r\n        //and has the same values in the for loop\r\n        const oldPropsKeys = Object.keys(previous);\r\n        const newPropsKeys = Object.keys(next);\r\n\r\n        if (oldPropsKeys.length !== newPropsKeys.length) {\r\n            return false;\r\n        }\r\n\r\n        const newPropsHasOwnProperty = hasOwnProperty.bind(next);\r\n        for (var i = 0; i < oldPropsKeys.length; i++) {\r\n            if (!newPropsHasOwnProperty(oldPropsKeys[i]) || previous[oldPropsKeys[i]] !== next[oldPropsKeys[i]]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    shouldComponentUpdate = (nextProps, nextState)=>{\r\n        return !(this.compare(this.props, nextProps))  || !(this.compare(this.state, nextState))\r\n    }\r\n    //Checks to see if the component is already saved\r\n    componentDidMount = ()=>{\r\n        if(!this.state.saved){\r\n           get(`${this.props.jobDetails.company}_${this.props.jobDetails.position}`)\r\n            .then((value)=>{\r\n                if(value!==undefined){\r\n                    this.setState({saved:true})\r\n                }\r\n            }) \r\n        }\r\n        \r\n    }\r\n    saveJob = async () =>{\r\n        const jobDate = new Date();\r\n        jobDate.setDate(jobDate.getDate()-this.props.jobDetails.time);\r\n        set(`${this.props.jobDetails.company}_${this.props.jobDetails.position}`, {\r\n            ...this.props.jobDetails,\r\n            time: jobDate.getTime(),\r\n            postedAt: jobDate.toISOString().split('T')[0],\r\n        })\r\n            .then(()=> {\r\n                this.setState({saved: true}, ()=> console.log('saved'))})\r\n            .catch((e)=>{console.log(`error ${e}`)})\r\n    }\r\n    removeJob = async () =>{\r\n        del(`${this.props.jobDetails.company}_${this.props.jobDetails.position}`)\r\n            .then(()=> {\r\n                this.setState({saved: false},()=>{\r\n                if(this.props.removeCallback !== undefined){\r\n                    this.props.removeCallback()\r\n                }})\r\n            })\r\n    }\r\n    render(){\r\n        return(\r\n            <li className={`item ${this.props.layout}`}>\r\n                <div className=\"logo\">\r\n                </div>\r\n  \r\n                <div className=\"grid\">\r\n                    <div className=\"features\">\r\n                        <p className=\"company\">{this.props.jobDetails.company}</p>\r\n                    </div>\r\n                    <h2 className=\"jobName\">\r\n                        {this.props.jobDetails.position}  \r\n                    </h2>\r\n                    <div className=\"extraInfo\">\r\n                        <p>{this.props.jobDetails.postedAt}</p> \r\n                        <p>{this.props.jobDetails.location}</p> \r\n                    </div>  \r\n                </div>\r\n                <hr className=\"lineBreak\"/>\r\n                <div className=\"tags\">\r\n                    <p>{this.props.jobDetails.summary}</p>\r\n                    {this.state.saved === false &&\r\n                        <button className=\"save\" onClick={this.saveJob}>Save</button>\r\n                    }\r\n                    {this.state.saved=== true &&\r\n                         <button className=\"save\" onClick={this.removeJob}>Remove</button>\r\n                    }\r\n                    <Link link={this.props.jobDetails.link} site={this.props.jobDetails.site}/>\r\n                </div> \r\n                <SiteLink site={this.props.jobDetails.site}/>   \r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JobBlock","import React ,{useRef, useEffect, useState}from 'react'\r\n\r\n\r\nexport default function LoadBarDetails(props) {\r\n    const [state, setstate] = useState({display: props.display}) \r\n    const displayRef = useRef('none');\r\n    const ref = useRef(0)\r\n    useEffect(() => {\r\n        console.log(props.display)\r\n        console.log(displayRef.current)\r\n        if(props.display==='none'){\r\n            ref.current = setTimeout(()=>setstate({display: 'none'}), 3000)\r\n        } else if(props.display==='block'){\r\n            clearTimeout(ref.current)\r\n            if(state.display !== 'block')setstate({display: 'block'});\r\n            \r\n        }\r\n       \r\n       \r\n    }, [props.info, props.display])\r\n    \r\n    return (\r\n        \r\n        <div className=\"loadBarDetails\" style={{'display': state.display}}><p>{props.info}</p></div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport './loadBar.scss'\r\nimport LoadBarDetails from './loadBarDetails'\r\nimport { MySearchContext } from '../searchBarContext'\r\nclass LoadBar extends Component {\r\n    \r\n    render() { \r\n        return (\r\n            <MySearchContext.Consumer>\r\n                {context=>\r\n                    <>\r\n                        <div className=\"loadBar\" style={{display: context.state.displayLoadbar}}>\r\n                            <div style={{width:`${context.state.loadBarProgress}%`}}/>\r\n                        </div>\r\n                        <LoadBarDetails info={context.state.info} display={context.state.displayLoadbar}/>\r\n                        \r\n                    </>\r\n                }\r\n            </MySearchContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoadBar\r\n","import React ,{useState, useEffect, useRef} from 'react'\r\n\r\nexport default function FilterResults(props) {\r\n    const ref = useRef(\r\n       {\r\n            'indeed': true,\r\n            'linkedIn': true,\r\n            'jobSite': true,\r\n            'reed': true,\r\n        }\r\n    )\r\n    const prevResult=useRef('') \r\n    \r\n    \r\n    \r\n    const filter = (event) =>{\r\n        let list = [];\r\n        console.log(ref.current)\r\n        console.log(prevResult.current);\r\n        console.log(props.jobResults)\r\n        // prevResult.length < event.target.value.length\r\n        const lowerCasedResult= (prevResult.current==='')? event.target.value : event.target.value.toLowerCase().trim();\r\n        if(false){\r\n            list = list.filter(job=> job.position.includes(event.target.value))\r\n        }else{\r\n            list = props.jobResults.filter(job=> \r\n                (job.position.toLowerCase().includes(lowerCasedResult)||\r\n                job.company.toLowerCase().includes(lowerCasedResult))&&\r\n                ref.current[job.site]=== true\r\n                )\r\n        }\r\n        console.log(list)\r\n        props.changeJobs(list);\r\n        prevResult.current = event.target.value\r\n    }\r\n    \r\n    const changeFilter=(event)=>{\r\n         console.log(event.target.value)\r\n        ref.current[event.target.value] = event.target.checked\r\n         console.log(event.target.checked)\r\n        filter({target:{value: prevResult.current}})\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const checkList = document.getElementById('list1');\r\n        checkList.getElementsByClassName('anchor')[0].onclick = function(evt) {\r\n            if (checkList.classList.contains('visible'))\r\n                checkList.classList.remove('visible');\r\n            else\r\n                checkList.classList.add('visible');\r\n            }\r\n        \r\n    }, [])\r\n    \r\n    const changeLayout=(e)=>{\r\n        console.log('changing');\r\n        if(e.target.value === 'row'){\r\n            props.changeLayout('', '');\r\n        }else if(e.target.value === 'columnSmall'){\r\n            props.changeLayout('colSmallUl', 'colSmallLi');\r\n        }else if(e.target.value === 'columnLarge'){\r\n            props.changeLayout('colSmallUl', 'colMedLi');\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <>  <label style={{\r\n        'margin': '5px'}}>Filter Results by:\r\n            <input type=\"text\" id=\"filterSearchBar\" onChange={filter} style={{ 'width': 'auto'}} placeholder=\"Filter Results\"/>\r\n        </label>\r\n        <div className=\"filterSites\">\r\n            <div id=\"list1\" className=\"dropdown-check-list\" tabIndex=\"100\">\r\n                <span className=\"anchor\">Filter by Sites</span>\r\n                <ul className=\"items\">\r\n                    <li><input type=\"checkbox\" onChange={changeFilter} style={{'backgroundColor': 'white', 'width': 'auto'}} value=\"linkedIn\" defaultChecked/>LinkedIn </li>\r\n                    <li><input type=\"checkbox\" onChange={changeFilter} style={{'backgroundColor': 'white', 'width': 'auto'}} value=\"jobSite\" defaultChecked/>JobSite</li>\r\n                    <li><input type=\"checkbox\" onChange={changeFilter} style={{'backgroundColor': 'white', 'width': 'auto'}} value=\"reed\" defaultChecked/>Reed </li>\r\n                    <li><input type=\"checkbox\" onChange={changeFilter} style={{'backgroundColor': 'white', 'width': 'auto'}} value=\"indeed\" defaultChecked/>Indeed </li>\r\n                </ul>\r\n            </div>\r\n\r\n\r\n            <select className=\"layout\"  onChange={changeLayout}>\r\n                <option value=\"row\" key=\"row\">Row</option>\r\n                <option value=\"columnSmall\" key=\"colSmall\">Column Small</option>\r\n                <option value=\"columnLarge\" key=\"colLarge\">Column medium</option>\r\n            </select>\r\n        </div>\r\n\r\n            \r\n\r\n        </>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport FilterResults from './filterResults'\r\nimport { MySearchContext } from '../searchBarContext'\r\n\r\nexport default function sortResults() {\r\n\r\n    return (\r\n        <MySearchContext.Consumer>\r\n            {context=>\r\n            <>  \r\n                <button className=\"clear\" onClick={context.showAdvanced} style={{'textDecoration': 'underline'}}>Advance search options</button>\r\n                \r\n                <label id=\"sortBy\" htmlFor=\"searchtype\">Sort by:\r\n                    <select value={context.state.sortBy} name=\"options\" id=\"searchBy\" onChange={context.sortBy}>\r\n                        <option value=\"id\" defaultValue>ID</option>\r\n                        <option value=\"time\">Time</option>\r\n                    </select>\r\n                </label>   \r\n                <FilterResults jobResults={context.state.initialResults} changeJobs={context.onFilter} changeLayout={context.changeLayout}/>\r\n                \r\n                <hr/>\r\n            </>\r\n            }\r\n        </MySearchContext.Consumer>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport './goToStyles.scss'\r\n\r\nexport default function GoToTopBot() {\r\n    const scrollTop =()=>{\r\n        window.scrollTo({\r\n            top:0,\r\n            left:0,\r\n            behavior: 'smooth',\r\n        })\r\n    }\r\n\r\n    const scrollBot =()=>{\r\n        window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            left: 0,\r\n            behavior: 'smooth',\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"scrollTo\">\r\n            <button id=\"top\" onClick={scrollTop} >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 42.67 64\"><defs></defs><title>Asset 45</title><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><path className=\"cls-1\" d=\"M19.57.78.78,19.5a2.67,2.67,0,0,0,3.77,3.78L18.67,9.21V61.33a2.67,2.67,0,1,0,5.33,0V9L38.11,23.27a2.67,2.67,0,1,0,3.78-3.76L23.35.79a2.67,2.67,0,0,0-3.78,0Z\"/></g></g></svg>\r\n            </button>\r\n            <button id=\"bottom\" onClick={scrollBot} >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 42.67 64\"><defs></defs><title>Asset 44</title><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><path className=\"cls-1\" d=\"M23.1,63.22,41.88,44.5a2.67,2.67,0,1,0-3.76-3.78L24,54.79V2.67a2.67,2.67,0,1,0-5.33,0V55L4.56,40.73a2.67,2.67,0,0,0-3.77,0A2.63,2.63,0,0,0,0,42.61a2.68,2.68,0,0,0,.77,1.88L19.32,63.21a2.67,2.67,0,0,0,3.78,0Z\"/></g></g></svg>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport './advancedOptions.scss'\r\nimport { MySearchContext } from '../searchBarContext'\r\n\r\n\r\nclass FormPage extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            styleClass:\"\",\r\n            displayLinked: 'none',\r\n            showIndeed: 'none',\r\n            showJobsite: 'none',\r\n            showReed: 'none',\r\n            indeedButton: 'Show',\r\n            reedButton: 'Show',\r\n            linkedButton: 'Show',\r\n            jobSiteButton: 'Show',\r\n        }\r\n    }\r\n   changeExtraParameters=(e)=>{\r\n        const value = e.target.value\r\n        const location = e.target.parentElement.parentElement.parentElement.childNodes[0].childNodes[0].textContent;\r\n        const parameter = e.target.getAttribute('name');\r\n        console.log(location, parameter, value)\r\n       this.props.changeExtraParametersInfo(location, parameter, value)\r\n   }\r\n\r\n   showIndeed= ()=>{\r\n       this.setState({\r\n           showIndeed: (this.state.showIndeed==='block')?'none': 'block',\r\n           indeedButton :(this.state.showIndeed==='block')? 'Show': 'Hide',\r\n       })\r\n   }\r\n   showLinked=()=>{\r\n        this.setState({\r\n            displayLinked: (this.state.displayLinked==='block')?'none': 'block',\r\n            linkedButton :(this.state.displayLinked==='block')? 'Show': 'Hide',\r\n        })\r\n   }\r\n   showReed=()=>{\r\n        this.setState({\r\n            showReed: (this.state.showReed==='block')?'none': 'block',\r\n            reedButton :(this.state.showReed==='block')? 'Show': 'Hide',\r\n        })\r\n   }\r\n   showJobsite=()=>{\r\n        this.setState({\r\n            showJobsite: (this.state.showJobsite==='block')?'none': 'block',\r\n            jobSiteButton :(this.state.showJobsite==='block')? 'Show': 'Hide',\r\n        })\r\n   }\r\n\r\n   onSubmit=(e)=>{\r\n    e.preventDefault();\r\n   }\r\n\r\n   showExtra=(e)=>{\r\n       this.setState({\r\n           [e.target.value] :(e.target.checked)? 'grid': 'none',\r\n           \r\n       })\r\n    \r\n   }\r\n    render() {\r\n        return (\r\n            <MySearchContext.Consumer>\r\n                {context=>\r\n                <div id=\"frontPage\" className={context.state.showAdvanced} >\r\n                    <div id=\"formDiv\">\r\n                        \r\n                        <form id=\"form\" onSubmit={this.onSubmit}>\r\n                            \r\n                            <h3>Advance search options</h3>\r\n                                  \r\n                            <label htmlFor=\"searchBy\">Search Website by:\r\n                                <select name=\"options\" id=\"searchBy\" onChange={context.searchBy} value={context.state.searchBy}>\r\n                                    <option value=\"R\">Most Relevant</option>\r\n                                    <option value=\"DD\">Most Recent</option>\r\n                                </select>\r\n                            </label>\r\n                            <label htmlFor=\"websites\"  style={{'fontWeight': '600','marginTop': '15px'}}>Which Websites:</label>\r\n                            <div className=\"whichSite card\">\r\n                                \r\n                                \r\n                                <label htmlFor=\"linkedIn\">LinkedIn: \r\n                                <input type=\"checkBox\" name=\"websites\" id=\"linkedIn\" value=\"LinkedIn\" onChange={e=>{context.loadLinkedIn(e); this.showExtra(e)}} checked={context.state.loadLinkedIn}/>\r\n                                </label>\r\n                                <label htmlFor=\"indeed\">Indeed:\r\n                                <input type=\"checkBox\" name=\"websites\" id=\"indeed\" value=\"Indeed\" onChange={e=>{context.loadIndeed(e); this.showExtra(e)}} checked={context.state.loadIndeed}/>\r\n                                </label>\r\n                                <label htmlFor=\"reed\">Reed:\r\n                                <input type=\"checkBox\" name=\"websites\" id=\"reed\" value=\"Reed\" onChange={e=>{context.loadReed(e); this.showExtra(e)}} checked={context.state.loadReed}/>\r\n                                </label>\r\n                                <label htmlFor=\"jobsite\">Jobsite:\r\n                                <input type=\"checkBox\" name=\"websites\" id=\"jobsite\" value=\"Jobsite\" onChange={e=>{context.loadJobSite(e); this.showExtra(e)}} checked={context.state.loadJobSite}/>\r\n                                </label>\r\n                                \r\n                            </div>\r\n                            <h2>Extra Parameters</h2>\r\n                        <div className=\"options extraParameters\">\r\n                             <div className=\"card\"  style={{'display': this.state.LinkedIn}}>\r\n                             <div className=\"extraParaheader\" >\r\n                                <h5>LinkedIn</h5>\r\n                <button className=\"clear\" onClick={this.showLinked}>{this.state.linkedButton}</button>\r\n                            </div>\r\n                                \r\n                                <div className=\"extraDetails\" style={{'display': this.state.displayLinked}}>\r\n                                    <label>\r\n                                    DatePosted:\r\n                                    <select name=\"Date\" onChange={this.changeExtraParameters} value={context.state.extraParametersInfo.LinkedIn.Date}>\r\n                                        <option value=\"none\">All</option>\r\n                                        <option value=\"1\">Past 24 hours</option>\r\n                                        <option value=\"1%2C2\">Past week</option>\r\n                                        <option value=\"%2C2%2C3%2C4\">Past month</option>\r\n                                    </select>\r\n                                    </label>\r\n                                    <label>\r\n                                    Job Type:\r\n                                    <select name=\"Job\" onChange={this.changeExtraParameters} value={context.state.extraParametersInfo.LinkedIn.Job}>\r\n                                        <option value=\"none\">All</option>\r\n                                        <option value=\"T\">Temporary</option>\r\n                                        <option value=\"F\">FullTime</option>\r\n                                        <option value=\"P\">Part-Time</option>\r\n                                        <option value=\"C\">Contract</option>\r\n                                        <option value=\"I\">Internship</option>\r\n                                    </select>\r\n                                    </label>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            <div className=\"card\" style={{'display': this.state.Indeed}}>\r\n                                <div className=\"extraParaheader\">\r\n                                    <h5>Indeed</h5>\r\n                <button type=\"button\" className=\"clear\" onClick={this.showIndeed}>{this.state.indeedButton}</button>\r\n                                </div>\r\n                                \r\n                                <div className=\"extraDetails\" style={{'display': this.state.showIndeed}}>\r\n                                    <label>\r\n                                        DatePosted:\r\n                                        <select name=\"Date\" onChange={this.changeExtraParameters} value={context.state.extraParametersInfo.Indeed.Date}>\r\n                                            <option value=\"none\">All</option>\r\n                                            <option value=\"1\">Past 24 hours</option>\r\n                                            <option value=\"7\">Past week</option>\r\n                                            <option value=\"14\">Past 2 weeks</option>\r\n                                        </select>\r\n                                    </label>\r\n                                    <label>\r\n                                        Job Type:\r\n                                        <select name=\"Job\" onChange={this.changeExtraParameters} value={context.state.extraParametersInfo.Indeed.Job}>\r\n                                            <option value=\"none\">All</option>\r\n                                            <option value=\"temporary\">Temporary</option>\r\n                                            <option value=\"fulltime\">FullTime</option>\r\n                                            <option value=\"parttime\">Part-Time</option>\r\n                                        </select>\r\n                                    </label>\r\n                                    <label>\r\n                                        Radius:\r\n                                        <select name=\"Rad\" onChange={this.changeExtraParameters} value={context.state.extraParametersInfo.Indeed.Rad}>\r\n                                            <option value=\"none\">All</option>\r\n                                            <option value=\"0\">0</option>\r\n                                            <option value=\"5\">5</option>\r\n                                            <option value=\"10\">10</option>\r\n                                            <option value=\"15\">15</option>\r\n                                            <option value=\"25\">25</option>\r\n                                            <option value=\"50\">50</option>\r\n                                            <option value=\"100\">100</option>\r\n                                        </select>\r\n                                    </label>\r\n                                    <label>\r\n                                        Minimum Salary: {context.state.extraParametersInfo.Indeed.Sal}\r\n                                        <input name=\"Sal\" type=\"range\" min={10000} max={100000} step={1000} onChange={this.changeExtraParameters} />\r\n                                    </label>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            <div className=\"card\" style={{'display': this.state.Jobsite}}>\r\n                                <div className=\"extraParaheader\">\r\n                                    <h5>JobSite</h5>\r\n                                <button className=\"clear\" onClick={this.showJobsite}>{this.state.jobSiteButton}</button>\r\n                                    \r\n                                </div>\r\n                                \r\n                                <div className=\"extraDetails\" style={{'display': this.state.showJobsite}}>\r\n                                <label>\r\n                                    DatePosted:\r\n                                    <select name=\"Date\" onChange={this.changeExtraParameters} value={context.state.extraParametersInfo.JobSite.Date}>\r\n                                        <option value=\"none\">All</option>\r\n                                        <option value=\"1\">Past 24 hours</option>\r\n                                        <option value=\"3\">Past 3 days</option>\r\n                                        <option value=\"7\">Past week</option>\r\n                                        <option value=\"14\">Past 2 weeks</option>\r\n                                    </select>\r\n                                </label>\r\n                                <label>\r\n                                    Job Type:\r\n                                    <select name=\"Job\" onChange={this.changeExtraParameters} value={context.state.extraParametersInfo.JobSite.Job}>\r\n                                        <option value=\"none\">All</option>\r\n                                        <option value=\"temporary\">Temporary</option>\r\n                                        <option value=\"permanent\">FullTime</option>\r\n                                        <option value=\"part-time\">Part-Time</option>\r\n                                    </select>\r\n                                </label>\r\n                                <label>\r\n                                    Radius:\r\n                                    <select name=\"Rad\" onChange={this.changeExtraParameters} value={context.state.extraParametersInfo.JobSite.Job}>\r\n                                    <   option value=\"none\">All</option>\r\n                                        <option value=\"0\">0</option>\r\n                                        <option value=\"5\">5</option>\r\n                                        <option value=\"10\">10</option>\r\n                                        <option value=\"20\">20</option>\r\n                                        <option value=\"30\">30</option>\r\n                                    </select>\r\n                                </label>\r\n                                <label>\r\n                                    Minimum Salary: {context.state.extraParametersInfo.JobSite.Sal}\r\n                                    <input name=\"Sal\" type=\"range\" min={10000} max={100000} step={10000} onChange={this.changeExtraParameters}/>\r\n                                </label>\r\n                                </div>\r\n                               \r\n                            </div>\r\n                            <div className=\"card\" style={{'display': this.state.Reed}}>\r\n                                <div className=\"extraParaheader\">\r\n                                    <h5>Reed</h5>\r\n                <button className=\"clear\" onClick={this.showReed}>{this.state.reedButton}</button> \r\n                                </div>\r\n                                \r\n                                <div className=\"extraDetails\" style={{'display': this.state.showReed}}>\r\n                                    <label>\r\n                                    DatePosted:\r\n                                    <select name=\"Date\" onChange={this.changeExtraParameters} value={context.state.extraParametersInfo.Reed.Date}>\r\n                                        <option value=\"none\">All</option>\r\n                                        <option value=\"Today\">Past 24 hours</option>\r\n                                        <option value=\"LastThreeDays\">Past 3 days</option>\r\n                                        <option value=\"LastWeek\">Past week</option>\r\n                                        <option value=\"LastTwoWeeks\">Past 2 weeks</option>\r\n                                    </select>\r\n                                </label>\r\n                                <label>\r\n                                    Job Type:\r\n                                    <select name=\"Job\" onChange={this.changeExtraParameters} value={context.state.extraParametersInfo.Reed.Job}>\r\n                                        <option value=\"none\">All</option>\r\n                                        <option value=\"temp\">Temporary</option>\r\n                                        <option value=\"perm\">Permanent</option>\r\n                                        <option value=\"fulltime\">FullTime</option>\r\n                                        <option value=\"parttime\">Part-Time</option>\r\n                                        <option value=\"contract\">Contract</option>\r\n                                    </select>\r\n                                </label>\r\n                                <label>\r\n                                    Radius:\r\n                                    <select name=\"Rad\" onChange={this.changeExtraParameters} value={context.state.extraParametersInfo.Reed.Rad}>\r\n                                        <option value=\"none\" defaultValue>All</option>\r\n                                        <option value=\"0\">0</option>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"5\">5</option>\r\n                                        <option value=\"10\">10</option>\r\n                                        <option value=\"20\">20</option>\r\n                                        <option value=\"30\">30</option>\r\n                                        <option value=\"50\">50</option>\r\n                                    </select>\r\n                                </label>\r\n                                <label>\r\n                                    Minimum Salary: {context.state.extraParametersInfo.Reed.Sal}\r\n                                    \r\n                                </label>\r\n                                    <input name=\"Sal\" type=\"range\" min={10000} max={100000} step={2000} onChange={this.changeExtraParameters}/>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n\r\n   \r\n                            <button type=\"submit\" className=\"clear\" id=\"formSubmit\" onClick={context.resetOptions}>Reset</button>\r\n                        </form>    \r\n                    </div>\r\n                    \r\n                </div>\r\n            }</MySearchContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormPage\r\n","import React from 'react';\r\nimport Search from '../Options/searchBar';\r\nimport JobBlock from './jobBlock';\r\nimport LoadBar from '../Options/LoadBar';\r\nimport '../styles.scss';\r\nimport '../advancedOptions/advancedOptions.scss'\r\nimport SortResults from '../Options/sortJobsBy'\r\nimport GoToTopBot from '../goToTopBot';\r\nimport FormPage from '../advancedOptions/advancedOptions'\r\nclass JobPage extends React.Component{\r\n\r\n    handleFormChange= (a, b, c)=>{\r\n        this.props.changeExtraParametersInfo(a, b, c);\r\n    }\r\n    render(){\r\n        return(\r\n            <> \r\n                <div className=\"select\">\r\n                <div id=\"headerBackground\">\r\n                </div>\r\n                <Search/>    \r\n                <LoadBar/>\r\n                <SortResults/>\r\n                </div>\r\n                <FormPage changeExtraParametersInfo= {this.handleFormChange}/>\r\n    \r\n                <ul className={`listOfJobs ${this.props.widthResults} ${this.props.layout[0]}`}  >\r\n                {this.props.jobResults.length >= 0 &&\r\n                this.props.jobResults.map(data => {\r\n                    return(\r\n                    <JobBlock key={data.id} jobDetails={data} isSaved={false} layout={this.props.layout[1]}/>\r\n                    )\r\n                })\r\n                }\r\n                {this.props.jobResults.length === 0 &&\r\n                <div>\r\n                    <p>There's nothing here</p>\r\n                </div>\r\n                }\r\n                </ul>\r\n                <GoToTopBot/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JobPage","import React, { Component } from 'react'\r\nimport JobBlock from '../mainPage/jobBlock'\r\nimport GoToTopBot from '../goToTopBot'\r\nimport {get , keys } from 'idb-keyval'\r\nimport FilterResults from '../Options/filterResults'\r\nimport './savedJobs.scss'\r\nexport default class SavedJobsPage extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            savedJobs: [],\r\n            initialResults: [],\r\n            layout: ['',''],\r\n        }\r\n    }\r\n    componentDidMount = async() =>{\r\n       \r\n        const jobs = []\r\n     keys()\r\n        .then((keys) => {\r\n            for(const key of keys){\r\n                console.log(key);\r\n                get(key).then((value)=>{\r\n                    value.id=key\r\n                    jobs.push(value)  \r\n                })\r\n                .then(()=>{\r\n                    this.setState({\r\n                        savedJobs: jobs,\r\n                        initialResults: jobs,\r\n                    })\r\n                }) \r\n            }\r\n        }) \r\n    }\r\n\r\n    removeItem = id=>{\r\n        const list = this.state.savedJobs.filter(item =>item.id !== id)\r\n        this.setState({\r\n            savedJobs: list,\r\n        });\r\n    }\r\n    onFilter = (value)=>{\r\n        this.setState({\r\n            savedJobs: value\r\n        })\r\n    }\r\n    changeLayout= (colLayout, rowLayout)=>{\r\n        console.log(`changing Layout ${colLayout} ${rowLayout}`);\r\n        this.setState({layout: [colLayout, rowLayout]}, ()=>{\r\n          console.log(`layout changed ${this.state.layout}`)\r\n        })\r\n    }\r\n    render() {\r\n        if (!window.indexedDB) {\r\n            return(\r\n                <div>\r\n                    <div id=\"headerBackground\">\r\n                    </div>\r\n                    <p>You have no Jobs Saved due to IndexedDb not being supported \r\n                        on your browser.\r\n                    </p>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <div id=\"headerBackground\">\r\n                </div>\r\n                <div id=\"savedFilter\">\r\n                    <h1>Saved Jobs</h1>\r\n                 <FilterResults jobResults={this.state.initialResults} changeJobs={this.onFilter} changeLayout={this.changeLayout}/>\r\n                </div>\r\n                 <hr/>\r\n                <ol id=\"savedResults\" className = {this.state.layout[0]}>\r\n                    {this.state.savedJobs.map(data=>(\r\n                        <JobBlock  key={data.id} jobDetails={data} removeCallback={e=>this.removeItem(data.id)} isSaved={true} layout={this.state.layout[1]} />\r\n                    ))}\r\n                    \r\n                </ol>\r\n                <GoToTopBot/>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport JobPage from \"./mainPage/jobPage\";\r\nimport SavedJobsPage from './savedPage/SavedJobsPage'\r\nimport {MySearchContext} from './searchBarContext';\r\n\r\nclass App extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.isDownloading = false;\r\n    \r\n    this.state = {\r\n        layout : ['',''],\r\n        initialResults:[],\r\n        jobResults: [],\r\n        searchValue:'',\r\n        locationValue:'',\r\n        displayLoadbar: 'none',\r\n        loadBarProgress: 0,\r\n        loadLinkedIn: true,\r\n        loadIndeed: true,\r\n        loadReed: true,\r\n        loadJobSite: true,\r\n        sortBy: 'id',\r\n        searchBy: 'R',\r\n        info: '',\r\n        extraParametersInfo: {\r\n          LinkedIn: {\r\n            Date: 'none',\r\n            Job: 'none',\r\n          },\r\n          Indeed:{\r\n            Date: 'none',\r\n            Job: 'none',\r\n            Rad: 'none',\r\n            Sal: 'none',\r\n          },\r\n          Reed:{\r\n            Date: 'none',\r\n            Job: 'none',\r\n            Rad: 'none',\r\n            Sal: 'none',\r\n          },\r\n          JobSite:{\r\n            Date: 'none',\r\n            Job: 'none',\r\n            Rad: 'none',\r\n            Sal: 'none',\r\n          }\r\n        },\r\n        showAdvanced: 'none',\r\n        widthResults: 'show',\r\n    }\r\n  }\r\n\r\n\r\nloadJobs= (searchValue, locationValue) =>{\r\n    let whatSitesToLoad= {\r\n      'linkedIn': !this.state.loadLinkedIn,\r\n      'reed': !this.state.loadReed,\r\n      'jobSite': !this.state.loadJobSite,\r\n      'indeed': !this.state.loadIndeed,\r\n    } \r\n    \r\n    \r\n    const url = new URL('http://localhost:3000/stream');\r\n    url.searchParams.set('q', searchValue);\r\n    url.searchParams.set('location', locationValue);\r\n    url.searchParams.set('indeed', this.state.loadIndeed);\r\n    url.searchParams.set('linked', this.state.loadLinkedIn);\r\n    url.searchParams.set('reed', this.state.loadReed);\r\n    url.searchParams.set('jobsite', this.state.loadJobSite);\r\n    if(this.state.sortBy !== 'R'){\r\n      url.searchParams.set('sortby', this.state.searchBy);\r\n    }\r\n    for(const key in this.state.extraParametersInfo){\r\n      if(this.state[`load${key}`]=== true){\r\n          for(const [itemKey, value] of Object.entries(this.state.extraParametersInfo[key])){\r\n            if(value !== 'none'){\r\n              console.log(`${key.slice(0,1).toLowerCase()}${itemKey}`, value);\r\n              url.searchParams.set(`${key.slice(0,1).toLowerCase()}${itemKey}`, value);\r\n            }\r\n          }\r\n      }\r\n    }\r\n      const sse = new EventSource(url);\r\n      let stateArray = []; \r\n      let loaded = false;\r\n      this.isDownloading = true;\r\n      this.setState({\r\n        displayLoadbar: 'block',\r\n        loadBarProgress:1,\r\n        info: 'sending...'\r\n      })\r\n      //closes the connection and tells the user that the connection\r\n      // couldnt connect if no response from the server in 12seconds\r\n      setTimeout(()=>{\r\n        if(loaded === false){\r\n          console.log('error loading')\r\n          this.setState({\r\n            info:'Connection Error, Closing connection',\r\n            displayLoadbar: 'none',\r\n          })\r\n          sse.removeEventListener('error', event => {\r\n            whatSitesToLoad[`${event.data}`]=true;\r\n            console.log(`server could not load ${event.data}`)\r\n          })\r\n          sse.removeEventListener('newData', e=> newData(e));\r\n          sse.removeEventListener('close', e=> closeData(e))\r\n          sse.close()\r\n          \r\n        }\r\n      },12000)\r\n\r\n    sse.onopen = ()=> {\r\n        console.log(\"Sse connection opened\");\r\n        loaded=true;\r\n        this.setState({\r\n            jobResults : [],\r\n            loadBarProgress:22,\r\n            info: 'Connection established'\r\n         }, ()=>{\r\n           this.isDownloading=false;\r\n         })\r\n      };\r\n  \r\n    sse.onerror = (e)=> {\r\n        console.log(\"error occured \"+ e.eventPhase);\r\n        this.setState({info: 'Error occured while scrapping'})\r\n      };\r\n    const newData = event=>{\r\n      stateArray.push(JSON.parse(event.data))\r\n      this.setState({\r\n          jobResults : stateArray,\r\n          initialResults: stateArray,\r\n          //increases the loadbar by 2 till loadBar is complete\r\n          loadBarProgress: this.state.loadBarProgress+ 1,\r\n      })\r\n    }\r\n\r\n    const closeData =event=>{\r\n      whatSitesToLoad[`${event.data}`]= true;   \r\n            console.log(`${event.data} finished`);\r\n            this.setState({\r\n              info: `${event.data} complete`\r\n            })\r\n            console.log(whatSitesToLoad);\r\n            //tests to see if all the required websites have been loaded\r\n        if(whatSitesToLoad['linkedIn'] && \r\n            whatSitesToLoad['indeed'] &&\r\n            whatSitesToLoad['reed'] &&\r\n            whatSitesToLoad['jobSite']){\r\n              \r\n          console.log('closing connection');\r\n          sse.close();\r\n          this.setState({\r\n              loadBarProgress: 100,\r\n              displayLoadbar: 'none',\r\n              info: 'Scraping complete',\r\n              jobResults: this.quickSortData(this.state.jobResults, this.state.sortBy)\r\n          })\r\n        }\r\n        sse.removeEventListener('error', event => {\r\n          whatSitesToLoad[`${event.data}`]=true;\r\n          console.log(`server could not load ${event.data}`)\r\n        })\r\n        sse.removeEventListener('newData', e=> newData(e));\r\n        sse.removeEventListener('close', e=> closeData(e))\r\n    }\r\n\r\n    \r\n    sse.addEventListener('newData', e=> newData(e));\r\n    sse.addEventListener('error', event => {\r\n      whatSitesToLoad[`${event.data}`]=true;\r\n      console.log(`server could not load ${event.data}`)\r\n    });\r\n    \r\n    sse.addEventListener('close', e=> closeData(e));\r\n  }\r\n  \r\n\r\n  quickSortData(array , sortBy){\r\n    if(array.length <= 1){\r\n        return array;\r\n    }\r\n    const pivot = array[array.length-1][sortBy];\r\n    const lessThanPivot=[];\r\n    const moreThanPivot=[];\r\n    for(let i = 0; i< array.length-1; i++){\r\n        if(+array[i][sortBy]<= pivot){\r\n            lessThanPivot.push(array[i]);\r\n        }else{\r\n            moreThanPivot.push(array[i]);\r\n        }\r\n    }\r\n    return [...this.quickSortData(lessThanPivot, sortBy),array[array.length-1],...this.quickSortData(moreThanPivot, sortBy)];\r\n  }\r\n \r\n  sortData=(results = this.state.jobResults)=>{\r\n        this.setState({\r\n            jobResults: this.quickSortData(results, this.state.sortBy),\r\n        })\r\n    }\r\n    changeExtraParametersInfo=(site, parameter, value)=>{\r\n        this.setState({\r\n          extraParametersInfo:{\r\n            ...this.state.extraParametersInfo,\r\n            [site]:{\r\n              ...this.state.extraParametersInfo[site],\r\n              [parameter]: value,\r\n            }\r\n          },\r\n        })\r\n \r\n    }\r\n    showAdvanced=()=>{\r\n      this.setState({\r\n        showAdvanced: (this.state.showAdvanced==='inline-block')?'none' : 'inline-block',\r\n        widthResults: (this.state.showAdvanced==='inline-block')?'show' : 'hide',\r\n      })\r\n    }\r\n  render(){\r\n    return(\r\n    <Router>\r\n      <>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Job Results</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/saved\">Saved Jobs</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        \r\n        <MySearchContext.Provider value={{\r\n          state: this.state,\r\n          changeSearchValue: value =>this.setState({searchValue: value.target.value}),\r\n          changeLocationValue: value =>this.setState({locationValue: value.target.value}),\r\n          clearValues: ()=>{this.setState({\r\n            searchValue: '',\r\n            locationValue:'', \r\n          })\r\n          },\r\n          showAdvanced: value=>{this.showAdvanced(value)},\r\n          resetOptions: ()=>{\r\n            this.setState({\r\n              extraParametersInfo: {\r\n              LinkedIn: {\r\n                Date: 'none',\r\n                Job: 'none',\r\n              },\r\n              Indeed:{\r\n                Date: 'none',\r\n                Job: 'none',\r\n                Rad: 'none',\r\n                Sal: 'none',\r\n              },\r\n              Reed:{\r\n                Date: 'none',\r\n                Job: 'none',\r\n                Rad: 'none',\r\n                Sal: 'none',\r\n              },\r\n              JobSite:{\r\n                Date: 'none',\r\n                Job: 'none',\r\n                Rad: 'none',\r\n                Sal: 'none',\r\n              }\r\n            }\r\n            })\r\n          },\r\n          onFilter: (value)=>this.sortData(value),\r\n          onSubmit: (e, searchValue, locationValue)=> {\r\n            e.preventDefault();\r\n            console.log(searchValue, locationValue)\r\n            this.loadJobs(searchValue, locationValue);\r\n          },\r\n          searchBy: value =>{\r\n            this.setState({\r\n              searchBy: value.target.value,\r\n            })\r\n          },\r\n          sortBy: value =>{\r\n            this.setState({\r\n              sortBy: value.target.value,\r\n              jobResults: this.quickSortData(this.state.jobResults, value.target.value),\r\n            })\r\n          },\r\n          loadLinkedIn: value =>this.setState({loadLinkedIn: value.target.checked}),\r\n          loadIndeed: value =>this.setState({loadIndeed: value.target.checked}),\r\n          loadJobSite: value =>this.setState({loadJobSite: value.target.checked}),\r\n          loadReed: value =>this.setState({loadReed: value.target.checked}),\r\n          changeLayout: (colLayout, rowLayout)=>{\r\n            console.log(`changing Layout ${colLayout} ${rowLayout}`);\r\n            this.setState({layout: [colLayout, rowLayout]}, ()=>{\r\n              console.log(`layout changed ${this.state.layout}`)\r\n            })\r\n          }\r\n        }}>\r\n          <Switch>\r\n\r\n            \r\n            <Route path=\"/saved\">\r\n              <SavedJobsPage />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <JobPage\r\n               jobResults = {this.state.jobResults}\r\n               changeExtraParametersInfo={this.changeExtraParametersInfo}\r\n               widthResults= {this.state.widthResults}\r\n               layout= {this.state.layout}\r\n               />\r\n            </Route>\r\n          </Switch>\r\n        </MySearchContext.Provider>\r\n      </>\r\n    </Router>\r\n  );\r\n  }\r\n    \r\n}\r\n\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './Components/App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}