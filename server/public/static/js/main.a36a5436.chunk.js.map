{"version":3,"sources":["serviceWorker.js","Components/searchBar.js","Components/link.js","Components/jobBlock.js","Components/LoadBar.js","Components/app.js","Components/frontPage.js","index.js"],"names":["Boolean","window","location","hostname","match","search","props","changeSearch","event","setState","value","target","changeLocation","onSubmit","e","preventDefault","onSearchChange","state","id","type","onChange","this","required","placeholder","className","onClick","Component","Link","site","href","link","rel","JobBlock","jobDetails","company","position","postedAt","summary","console","log","React","LoadBar","style","display","show","width","progress","App","loadJobs","querySearch","linkedInLoaded","indeedLoaded","url","URL","searchParams","set","sse","EventSource","displayLoadbar","loadBarProgress","onopen","jobResults","onerror","JSON","stringify","close","addEventListener","data","push","parse","searchChange","searchValue","sortData","quickSortData","tagClick","array","length","pivot","lessThanPivot","moreThanPivot","i","undefined","map","key","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a36a5436.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './searchStyles.scss'\r\n\r\nclass search extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            value: '',\r\n            location:'',\r\n        }\r\n    }\r\n    changeSearch=(event)=>{\r\n        this.setState({\r\n            value: event.target.value\r\n        })\r\n    }\r\n    changeLocation=(event)=>{\r\n        this.setState({\r\n            location: event.target.value\r\n        })\r\n    }\r\n    onSubmit=(e)=>{\r\n        e.preventDefault();\r\n        this.props.onSearchChange(this.state.value,this.state.location)\r\n    }\r\n\r\n   \r\n\r\n    render() {\r\n        return (\r\n            <div id=\"search\">\r\n                <form>\r\n                        <input type=\"search\" onChange={this.changeSearch} required placeholder=\"Search Jobs\"/>  \r\n                        <input id=\"location\" type=\"search\" onChange={this.changeLocation} required placeholder=\"Location\"/> \r\n                        <div className=\"button\">\r\n                        <button className=\"clear\" type=\"submit\" onClick={this.onSubmit}>Search</button>\r\n                        <input className=\"clear\" type=\"button\" value=\"Clear\" onClick={this.changeSearch}/>\r\n                        </div> \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default search\r\n","import React, { Component } from 'react';\r\nimport './link.scss';\r\nclass Link extends Component {\r\n    render() {\r\n        if(this.props.site === 'indeed'){\r\n           return (\r\n                <a href={`https://www.indeed.co.uk${this.props.link}`} target=\"_blank\" rel=\"noopener noreferrer\">Link to site</a>\r\n            ) \r\n        }\r\n        return (\r\n            <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\">Link to site</a>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Link\r\n","import React from 'react';\r\nimport './jobBlock.scss';\r\nimport Link from './link'\r\n\r\n\r\nclass JobBlock extends React.Component{\r\n    \r\n    render(){\r\n        return(\r\n            <li className={`item`}>\r\n                <div className=\"logo\">\r\n                    {/* <Logo className=\"logoImage\" logo={this.props.jobDetails.logo} /> */}\r\n                </div>\r\n  \r\n                <div className=\"grid\">\r\n                    <div className=\"features\">\r\n                        <p className=\"company\">{this.props.jobDetails.company}</p>\r\n                    </div>\r\n                    <h2 className=\"jobName\">\r\n                        {this.props.jobDetails.position}  \r\n                    </h2>\r\n                    <div className=\"extraInfo\">\r\n                        <p>{this.props.jobDetails.postedAt}</p> \r\n                        {/* <p>{this.props.jobDetails.contract}</p>  */}\r\n                        <p>{this.props.jobDetails.location}</p> \r\n                    </div>  \r\n                </div>\r\n                <hr className=\"lineBreak\"/>\r\n                <div className=\"tags\">\r\n                    <p>{this.props.jobDetails.summary}</p>\r\n                    <button className=\"save\" onClick={console.log('save')}>Save</button>\r\n                    <Link link={this.props.jobDetails.link} site={this.props.jobDetails.site}/>\r\n                    <p className=\"site\">{this.props.jobDetails.site}</p>\r\n                </div>    \r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JobBlock","import React, { Component } from 'react'\r\nimport './loadBar.scss'\r\nclass LoadBar extends Component {\r\n    \r\n    render() { \r\n        return (\r\n            <div id=\"loadBar\" style={{display: this.props.show}}>\r\n                <div style={{width:`${this.props.progress}%`}}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoadBar\r\n","import React from 'react';\r\nimport Search from './searchBar';\r\nimport JobBlock from './jobBlock';\r\nimport LoadBar from './LoadBar';\r\nimport './styles.scss';\r\n\r\n\r\nclass App extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            jobResults: [],\r\n            searchValue:'',\r\n            displayLoadbar: 'none',\r\n            loadBarProgress: 0,\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    loadJobs= (querySearch, location)=>{\r\n        let linkedInLoaded = false;\r\n        let indeedLoaded = false;\r\n        const url = new URL('stream', 'https://job-puppeteer-scrape.herokuapp.com/');\r\n        url.searchParams.set('q', querySearch);\r\n        url.searchParams.set('location', location);\r\n        const sse = new EventSource(url);\r\n        const loadamount = 2;\r\n        this.setState({\r\n            displayLoadbar: 'block',\r\n            loadBarProgress:1,\r\n        })\r\n        sse.onopen = ()=> {\r\n            console.log(\"Sse connection opened\");\r\n            this.setState({\r\n                jobResults : [],\r\n                loadBarProgress:22,\r\n             })\r\n          };\r\n      \r\n        sse.onerror = function (e) {\r\n            console.log(\"error occured \"+ JSON.stringify(e));\r\n            sse.close();\r\n          };\r\n\r\n        sse.addEventListener('newData',(event)=> {\r\n            console.log(\"received\")\r\n            console.log(event.data);\r\n            console.log(this.state.jobResults)\r\n            this.state.jobResults.push(JSON.parse(event.data))\r\n             this.setState({\r\n                 jobResults : this.state.jobResults,\r\n                 //increases the loadbar by 2 till loadBar is complete\r\n                 loadBarProgress: this.state.loadBarProgress+ loadamount,\r\n              })\r\n        });\r\n        \r\n        sse.addEventListener('close',(event)=> {\r\n            if(event.data ==='indeed'){\r\n                indeedLoaded = true;\r\n            }else if(event.data ==='linkedIn'){\r\n                linkedInLoaded = true;\r\n            }\r\n            if(linkedInLoaded && indeedLoaded){\r\n                sse.close();\r\n                console.log('closing connection')\r\n                this.setState({\r\n                    loadBarProgress: 100,\r\n                    displayLoadbar: 'none',\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    searchChange=(value, location)=>{\r\n        this.setState({\r\n            searchValue: value,\r\n        }, ()=>{this.loadJobs(value, location)})\r\n        \r\n    }\r\n\r\n    // removeSearch= e=>{\r\n    //     this.setState({\r\n    //         searchValue: this.state.searchValue.split(' ').filter((item, index)=> item!== e).join(' '),\r\n\r\n    //     },()=>{this.setState({\r\n    //         jobResults: this.loadJobs(this.state.searchValue),\r\n    //     })})\r\n        \r\n    //     console.log(this.state.searchValue)\r\n    // }\r\n    quickSortData(array, ){\r\n        if(array.length <= 1){\r\n            return array;\r\n        }\r\n        const pivot = array[array.length-1]['time'];\r\n        const lessThanPivot=[];\r\n        const moreThanPivot=[];\r\n        for(let i = 0; i< array.length-1; i++){\r\n            if(typeof(array[i]['time']) === undefined || +array[i]['time']<= pivot){\r\n                lessThanPivot.push(array[i])  \r\n            }else{\r\n                moreThanPivot.push(array[i])\r\n            }\r\n        }\r\n        return [...this.quickSortData(lessThanPivot),array[array.length-1],...this.quickSortData(moreThanPivot)]\r\n    }\r\n    sortData=()=>{\r\n        this.setState({\r\n            jobResults: this.quickSortData(this.state.jobResults, 'time'),\r\n        })\r\n    }\r\n    tagClick= e =>{\r\n        this.searchChange(`${this.state.searchValue} ${e}`);\r\n    }\r\n    render(){\r\n        return(\r\n            <main>\r\n                \r\n                <div id=\"headerBackground\">\r\n                </div>\r\n               <Search value={this.state.searchValue} onSearchChange={this.searchChange}/>\r\n               <LoadBar progress = {this.state.loadBarProgress} show={this.state.displayLoadbar} />\r\n               <button onClick={this.sortData}>Sort Data</button>\r\n               <ul>\r\n                {this.state.jobResults.map( data => {\r\n                    return(\r\n                    <JobBlock key={data.id} jobDetails={data}/>\r\n                    )\r\n                })\r\n                }\r\n                </ul>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React, { Component } from 'react'\r\nimport './formStyles.scss'\r\n\r\n\r\nclass frontPage extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = ({\r\n            searchValue: '',\r\n            location: '',\r\n        })\r\n    }\r\n    \r\n    searchChange=(value, location)=>{\r\n        this.setState({\r\n            searchValue: value,\r\n            location: location,\r\n        })\r\n        \r\n    }\r\n    jobSearch = (e) =>{\r\n    e.preventDefault();\r\n    \r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"frontPage\">\r\n                <h1>Job Search</h1>\r\n                <form id=\"form\" onSubmit={this.jobSearch}>\r\n                    <label>Job Name:<input type=\"search\" onChange={this.changeSearch} required placeholder=\"Search Jobs\"/></label>  \r\n                    <label>Location<input id=\"location\" type=\"search\" onChange={this.changeLocation} required placeholder=\"Location\"/></label>        \r\n                    <label>Search Website by:<input list=\"searchtype\" value={this.props.value} name=\"options\" id=\"searchBy\"/>\r\n                    <datalist id=\"searchtype\">\r\n                    <option value=\"Most Relevant\"/>\r\n                    <option value=\"Most Recent\"/>\r\n                    </datalist>\r\n                    </label>\r\n                    <label>Which Website:<input list=\"searches\" value={this.props.value} name=\"options\"/>\r\n                    <datalist id=\"searches\">\r\n                    <option value=\"All\"/>\r\n                    <option value=\"LinkedIn\"/>\r\n                    <option value=\"indeed\"/>  \r\n                    </datalist></label>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default frontPage\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './Components/app';\r\nimport FrontPage from './Components/frontPage';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n    {/* <FrontPage/> */}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}